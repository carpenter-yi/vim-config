!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$	.\tags	/^PFNGLCOLORSUBTABLEEXTPROC	.\\GL\\GL.h	\/^typedef void (APIENTRY * PFNGLCOLORSUBTABLEEXTPROC)$\/;"	t$/;"	t	file:
$	.\tags	/^PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	.\\GL\\GL.h	\/^typedef void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)$\/;"	t$/;"	t	file:
FGAPI	.\GL\freeglut_std.h	106;"	d
FGAPI	.\GL\freeglut_std.h	68;"	d
FGAPI	.\GL\freeglut_std.h	81;"	d
FGAPI	.\GL\freeglut_std.h	83;"	d
FGAPIENTRY	.\GL\freeglut_std.h	107;"	d
FGAPIENTRY	.\GL\freeglut_std.h	69;"	d
FGAPIENTRY	.\GL\freeglut_std.h	79;"	d
FGUNUSED	.\GL\freeglut_std.h	608;"	d
FGUNUSED	.\GL\freeglut_std.h	610;"	d
FREEGLUT	.\GL\freeglut_std.h	114;"	d
FREEGLUT_LIB_PRAGMAS	.\GL\freeglut_std.h	51;"	d
FREEGLUT_LIB_PRAGMAS	.\GL\freeglut_std.h	53;"	d
FREEGLUT_VERSION_2_0	.\GL\freeglut_std.h	116;"	d
GLUT_ACCUM	.\GL\freeglut_std.h	169;"	d
GLUT_ACTION_CONTINUE_EXECUTION	.\GL\freeglut_ext.h	53;"	d
GLUT_ACTION_EXIT	.\GL\freeglut_ext.h	51;"	d
GLUT_ACTION_GLUTMAINLOOP_RETURNS	.\GL\freeglut_ext.h	52;"	d
GLUT_ACTION_ON_WINDOW_CLOSE	.\GL\freeglut_ext.h	74;"	d
GLUT_ACTIVE_ALT	.\GL\freeglut_std.h	329;"	d
GLUT_ACTIVE_CTRL	.\GL\freeglut_std.h	328;"	d
GLUT_ACTIVE_SHIFT	.\GL\freeglut_std.h	327;"	d
GLUT_ALLOW_DIRECT_CONTEXT	.\GL\freeglut_ext.h	65;"	d
GLUT_ALPHA	.\GL\freeglut_std.h	170;"	d
GLUT_API_VERSION	.\GL\freeglut_std.h	115;"	d
GLUT_AUX	.\GL\freeglut_ext.h	91;"	d
GLUT_AUX1	.\GL\freeglut_ext.h	93;"	d
GLUT_AUX2	.\GL\freeglut_ext.h	94;"	d
GLUT_AUX3	.\GL\freeglut_ext.h	95;"	d
GLUT_AUX4	.\GL\freeglut_ext.h	96;"	d
GLUT_BITMAP_8_BY_13	.\GL\freeglut_std.h	198;"	d
GLUT_BITMAP_8_BY_13	.\GL\freeglut_std.h	224;"	d
GLUT_BITMAP_9_BY_15	.\GL\freeglut_std.h	197;"	d
GLUT_BITMAP_9_BY_15	.\GL\freeglut_std.h	223;"	d
GLUT_BITMAP_HELVETICA_10	.\GL\freeglut_std.h	201;"	d
GLUT_BITMAP_HELVETICA_10	.\GL\freeglut_std.h	227;"	d
GLUT_BITMAP_HELVETICA_12	.\GL\freeglut_std.h	202;"	d
GLUT_BITMAP_HELVETICA_12	.\GL\freeglut_std.h	228;"	d
GLUT_BITMAP_HELVETICA_18	.\GL\freeglut_std.h	203;"	d
GLUT_BITMAP_HELVETICA_18	.\GL\freeglut_std.h	229;"	d
GLUT_BITMAP_TIMES_ROMAN_10	.\GL\freeglut_std.h	199;"	d
GLUT_BITMAP_TIMES_ROMAN_10	.\GL\freeglut_std.h	225;"	d
GLUT_BITMAP_TIMES_ROMAN_24	.\GL\freeglut_std.h	200;"	d
GLUT_BITMAP_TIMES_ROMAN_24	.\GL\freeglut_std.h	226;"	d
GLUT_BLUE	.\GL\freeglut_std.h	363;"	d
GLUT_BORDERLESS	.\GL\freeglut_ext.h	227;"	d
GLUT_CAPTIONLESS	.\GL\freeglut_ext.h	226;"	d
GLUT_COMPATIBILITY_PROFILE	.\GL\freeglut_ext.h	117;"	d
GLUT_CORE_PROFILE	.\GL\freeglut_ext.h	116;"	d
GLUT_CREATE_NEW_CONTEXT	.\GL\freeglut_ext.h	58;"	d
GLUT_CURSOR_BOTTOM_LEFT_CORNER	.\GL\freeglut_std.h	353;"	d
GLUT_CURSOR_BOTTOM_RIGHT_CORNER	.\GL\freeglut_std.h	352;"	d
GLUT_CURSOR_BOTTOM_SIDE	.\GL\freeglut_std.h	347;"	d
GLUT_CURSOR_CROSSHAIR	.\GL\freeglut_std.h	343;"	d
GLUT_CURSOR_CYCLE	.\GL\freeglut_std.h	339;"	d
GLUT_CURSOR_DESTROY	.\GL\freeglut_std.h	337;"	d
GLUT_CURSOR_FULL_CROSSHAIR	.\GL\freeglut_std.h	356;"	d
GLUT_CURSOR_HELP	.\GL\freeglut_std.h	338;"	d
GLUT_CURSOR_INFO	.\GL\freeglut_std.h	336;"	d
GLUT_CURSOR_INHERIT	.\GL\freeglut_std.h	354;"	d
GLUT_CURSOR_LEFT_ARROW	.\GL\freeglut_std.h	335;"	d
GLUT_CURSOR_LEFT_RIGHT	.\GL\freeglut_std.h	345;"	d
GLUT_CURSOR_LEFT_SIDE	.\GL\freeglut_std.h	348;"	d
GLUT_CURSOR_NONE	.\GL\freeglut_std.h	355;"	d
GLUT_CURSOR_RIGHT_ARROW	.\GL\freeglut_std.h	334;"	d
GLUT_CURSOR_RIGHT_SIDE	.\GL\freeglut_std.h	349;"	d
GLUT_CURSOR_SPRAY	.\GL\freeglut_std.h	340;"	d
GLUT_CURSOR_TEXT	.\GL\freeglut_std.h	342;"	d
GLUT_CURSOR_TOP_LEFT_CORNER	.\GL\freeglut_std.h	350;"	d
GLUT_CURSOR_TOP_RIGHT_CORNER	.\GL\freeglut_std.h	351;"	d
GLUT_CURSOR_TOP_SIDE	.\GL\freeglut_std.h	346;"	d
GLUT_CURSOR_UP_DOWN	.\GL\freeglut_std.h	344;"	d
GLUT_CURSOR_WAIT	.\GL\freeglut_std.h	341;"	d
GLUT_DEBUG	.\GL\freeglut_ext.h	109;"	d
GLUT_DEPTH	.\GL\freeglut_std.h	171;"	d
GLUT_DEVICE_IGNORE_KEY_REPEAT	.\GL\freeglut_std.h	286;"	d
GLUT_DEVICE_KEY_REPEAT	.\GL\freeglut_std.h	287;"	d
GLUT_DIRECT_RENDERING	.\GL\freeglut_ext.h	82;"	d
GLUT_DISPLAY_MODE_POSSIBLE	.\GL\freeglut_std.h	264;"	d
GLUT_DOUBLE	.\GL\freeglut_std.h	168;"	d
GLUT_DOWN	.\GL\freeglut_std.h	156;"	d
GLUT_ELAPSED_TIME	.\GL\freeglut_std.h	270;"	d
GLUT_ENTERED	.\GL\freeglut_std.h	159;"	d
GLUT_FORCE_DIRECT_CONTEXT	.\GL\freeglut_ext.h	67;"	d
GLUT_FORCE_INDIRECT_CONTEXT	.\GL\freeglut_ext.h	64;"	d
GLUT_FORWARD_COMPATIBLE	.\GL\freeglut_ext.h	110;"	d
GLUT_FULLY_COVERED	.\GL\freeglut_std.h	187;"	d
GLUT_FULLY_RETAINED	.\GL\freeglut_std.h	185;"	d
GLUT_FULL_SCREEN	.\GL\freeglut_ext.h	84;"	d
GLUT_GAME_MODE_ACTIVE	.\GL\freeglut_std.h	380;"	d
GLUT_GAME_MODE_DISPLAY_CHANGED	.\GL\freeglut_std.h	386;"	d
GLUT_GAME_MODE_HEIGHT	.\GL\freeglut_std.h	383;"	d
GLUT_GAME_MODE_PIXEL_DEPTH	.\GL\freeglut_std.h	384;"	d
GLUT_GAME_MODE_POSSIBLE	.\GL\freeglut_std.h	381;"	d
GLUT_GAME_MODE_REFRESH_RATE	.\GL\freeglut_std.h	385;"	d
GLUT_GAME_MODE_WIDTH	.\GL\freeglut_std.h	382;"	d
GLUT_GREEN	.\GL\freeglut_std.h	362;"	d
GLUT_HAS_DIAL_AND_BUTTON_BOX	.\GL\freeglut_std.h	279;"	d
GLUT_HAS_JOYSTICK	.\GL\freeglut_std.h	288;"	d
GLUT_HAS_KEYBOARD	.\GL\freeglut_std.h	276;"	d
GLUT_HAS_MOUSE	.\GL\freeglut_std.h	277;"	d
GLUT_HAS_MULTI	.\GL\freeglut_ext.h	180;"	d
GLUT_HAS_OVERLAY	.\GL\freeglut_std.h	299;"	d
GLUT_HAS_SPACEBALL	.\GL\freeglut_std.h	278;"	d
GLUT_HAS_TABLET	.\GL\freeglut_std.h	280;"	d
GLUT_HIDDEN	.\GL\freeglut_std.h	184;"	d
GLUT_INDEX	.\GL\freeglut_std.h	166;"	d
GLUT_INIT_DISPLAY_MODE	.\GL\freeglut_std.h	269;"	d
GLUT_INIT_FLAGS	.\GL\freeglut_ext.h	103;"	d
GLUT_INIT_MAJOR_VERSION	.\GL\freeglut_ext.h	101;"	d
GLUT_INIT_MINOR_VERSION	.\GL\freeglut_ext.h	102;"	d
GLUT_INIT_PROFILE	.\GL\freeglut_ext.h	104;"	d
GLUT_INIT_STATE	.\GL\freeglut_ext.h	72;"	d
GLUT_INIT_WINDOW_HEIGHT	.\GL\freeglut_std.h	268;"	d
GLUT_INIT_WINDOW_WIDTH	.\GL\freeglut_std.h	267;"	d
GLUT_INIT_WINDOW_X	.\GL\freeglut_std.h	265;"	d
GLUT_INIT_WINDOW_Y	.\GL\freeglut_std.h	266;"	d
GLUT_JOYSTICK_AXES	.\GL\freeglut_std.h	291;"	d
GLUT_JOYSTICK_BUTTONS	.\GL\freeglut_std.h	290;"	d
GLUT_JOYSTICK_BUTTON_A	.\GL\freeglut_std.h	372;"	d
GLUT_JOYSTICK_BUTTON_B	.\GL\freeglut_std.h	373;"	d
GLUT_JOYSTICK_BUTTON_C	.\GL\freeglut_std.h	374;"	d
GLUT_JOYSTICK_BUTTON_D	.\GL\freeglut_std.h	375;"	d
GLUT_JOYSTICK_POLL_RATE	.\GL\freeglut_std.h	292;"	d
GLUT_KEY_ALT_L	.\GL\freeglut_ext.h	45;"	d
GLUT_KEY_ALT_R	.\GL\freeglut_ext.h	46;"	d
GLUT_KEY_BEGIN	.\GL\freeglut_ext.h	39;"	d
GLUT_KEY_CTRL_L	.\GL\freeglut_ext.h	43;"	d
GLUT_KEY_CTRL_R	.\GL\freeglut_ext.h	44;"	d
GLUT_KEY_DELETE	.\GL\freeglut_ext.h	40;"	d
GLUT_KEY_DOWN	.\GL\freeglut_std.h	143;"	d
GLUT_KEY_END	.\GL\freeglut_std.h	147;"	d
GLUT_KEY_F1	.\GL\freeglut_std.h	128;"	d
GLUT_KEY_F10	.\GL\freeglut_std.h	137;"	d
GLUT_KEY_F11	.\GL\freeglut_std.h	138;"	d
GLUT_KEY_F12	.\GL\freeglut_std.h	139;"	d
GLUT_KEY_F2	.\GL\freeglut_std.h	129;"	d
GLUT_KEY_F3	.\GL\freeglut_std.h	130;"	d
GLUT_KEY_F4	.\GL\freeglut_std.h	131;"	d
GLUT_KEY_F5	.\GL\freeglut_std.h	132;"	d
GLUT_KEY_F6	.\GL\freeglut_std.h	133;"	d
GLUT_KEY_F7	.\GL\freeglut_std.h	134;"	d
GLUT_KEY_F8	.\GL\freeglut_std.h	135;"	d
GLUT_KEY_F9	.\GL\freeglut_std.h	136;"	d
GLUT_KEY_HOME	.\GL\freeglut_std.h	146;"	d
GLUT_KEY_INSERT	.\GL\freeglut_std.h	148;"	d
GLUT_KEY_LEFT	.\GL\freeglut_std.h	140;"	d
GLUT_KEY_NUM_LOCK	.\GL\freeglut_ext.h	38;"	d
GLUT_KEY_PAGE_DOWN	.\GL\freeglut_std.h	145;"	d
GLUT_KEY_PAGE_UP	.\GL\freeglut_std.h	144;"	d
GLUT_KEY_REPEAT_DEFAULT	.\GL\freeglut_std.h	370;"	d
GLUT_KEY_REPEAT_OFF	.\GL\freeglut_std.h	368;"	d
GLUT_KEY_REPEAT_ON	.\GL\freeglut_std.h	369;"	d
GLUT_KEY_RIGHT	.\GL\freeglut_std.h	142;"	d
GLUT_KEY_SHIFT_L	.\GL\freeglut_ext.h	41;"	d
GLUT_KEY_SHIFT_R	.\GL\freeglut_ext.h	42;"	d
GLUT_KEY_UP	.\GL\freeglut_std.h	141;"	d
GLUT_LAYER_IN_USE	.\GL\freeglut_std.h	298;"	d
GLUT_LEFT	.\GL\freeglut_std.h	158;"	d
GLUT_LEFT_BUTTON	.\GL\freeglut_std.h	153;"	d
GLUT_LUMINANCE	.\GL\freeglut_std.h	175;"	d
GLUT_MENU_IN_USE	.\GL\freeglut_std.h	181;"	d
GLUT_MENU_NOT_IN_USE	.\GL\freeglut_std.h	180;"	d
GLUT_MENU_NUM_ITEMS	.\GL\freeglut_std.h	263;"	d
GLUT_MIDDLE_BUTTON	.\GL\freeglut_std.h	154;"	d
GLUT_MULTISAMPLE	.\GL\freeglut_std.h	173;"	d
GLUT_NORMAL	.\GL\freeglut_std.h	321;"	d
GLUT_NORMAL_DAMAGED	.\GL\freeglut_std.h	301;"	d
GLUT_NOT_VISIBLE	.\GL\freeglut_std.h	182;"	d
GLUT_NUM_BUTTON_BOX_BUTTONS	.\GL\freeglut_std.h	283;"	d
GLUT_NUM_DIALS	.\GL\freeglut_std.h	284;"	d
GLUT_NUM_MOUSE_BUTTONS	.\GL\freeglut_std.h	281;"	d
GLUT_NUM_SPACEBALL_BUTTONS	.\GL\freeglut_std.h	282;"	d
GLUT_NUM_TABLET_BUTTONS	.\GL\freeglut_std.h	285;"	d
GLUT_OVERLAY	.\GL\freeglut_std.h	322;"	d
GLUT_OVERLAY_DAMAGED	.\GL\freeglut_std.h	302;"	d
GLUT_OVERLAY_POSSIBLE	.\GL\freeglut_std.h	297;"	d
GLUT_OWNS_JOYSTICK	.\GL\freeglut_std.h	289;"	d
GLUT_PARTIALLY_RETAINED	.\GL\freeglut_std.h	186;"	d
GLUT_RED	.\GL\freeglut_std.h	361;"	d
GLUT_RENDERING_CONTEXT	.\GL\freeglut_ext.h	81;"	d
GLUT_RGB	.\GL\freeglut_std.h	164;"	d
GLUT_RGBA	.\GL\freeglut_std.h	165;"	d
GLUT_RIGHT_BUTTON	.\GL\freeglut_std.h	155;"	d
GLUT_SCREEN_HEIGHT	.\GL\freeglut_std.h	260;"	d
GLUT_SCREEN_HEIGHT_MM	.\GL\freeglut_std.h	262;"	d
GLUT_SCREEN_WIDTH	.\GL\freeglut_std.h	259;"	d
GLUT_SCREEN_WIDTH_MM	.\GL\freeglut_std.h	261;"	d
GLUT_SINGLE	.\GL\freeglut_std.h	167;"	d
GLUT_SRGB	.\GL\freeglut_ext.h	228;"	d
GLUT_STENCIL	.\GL\freeglut_std.h	172;"	d
GLUT_STEREO	.\GL\freeglut_std.h	174;"	d
GLUT_STROKE_MONO_ROMAN	.\GL\freeglut_std.h	196;"	d
GLUT_STROKE_MONO_ROMAN	.\GL\freeglut_std.h	222;"	d
GLUT_STROKE_ROMAN	.\GL\freeglut_std.h	195;"	d
GLUT_STROKE_ROMAN	.\GL\freeglut_std.h	221;"	d
GLUT_TRANSPARENT_INDEX	.\GL\freeglut_std.h	300;"	d
GLUT_TRY_DIRECT_CONTEXT	.\GL\freeglut_ext.h	66;"	d
GLUT_UP	.\GL\freeglut_std.h	157;"	d
GLUT_USE_CURRENT_CONTEXT	.\GL\freeglut_ext.h	59;"	d
GLUT_VERSION	.\GL\freeglut_ext.h	79;"	d
GLUT_VIDEO_RESIZE_HEIGHT	.\GL\freeglut_std.h	316;"	d
GLUT_VIDEO_RESIZE_HEIGHT_DELTA	.\GL\freeglut_std.h	312;"	d
GLUT_VIDEO_RESIZE_IN_USE	.\GL\freeglut_std.h	308;"	d
GLUT_VIDEO_RESIZE_POSSIBLE	.\GL\freeglut_std.h	307;"	d
GLUT_VIDEO_RESIZE_WIDTH	.\GL\freeglut_std.h	315;"	d
GLUT_VIDEO_RESIZE_WIDTH_DELTA	.\GL\freeglut_std.h	311;"	d
GLUT_VIDEO_RESIZE_X	.\GL\freeglut_std.h	313;"	d
GLUT_VIDEO_RESIZE_X_DELTA	.\GL\freeglut_std.h	309;"	d
GLUT_VIDEO_RESIZE_Y	.\GL\freeglut_std.h	314;"	d
GLUT_VIDEO_RESIZE_Y_DELTA	.\GL\freeglut_std.h	310;"	d
GLUT_VISIBLE	.\GL\freeglut_std.h	183;"	d
GLUT_WINDOW_ACCUM_ALPHA_SIZE	.\GL\freeglut_std.h	249;"	d
GLUT_WINDOW_ACCUM_BLUE_SIZE	.\GL\freeglut_std.h	248;"	d
GLUT_WINDOW_ACCUM_GREEN_SIZE	.\GL\freeglut_std.h	247;"	d
GLUT_WINDOW_ACCUM_RED_SIZE	.\GL\freeglut_std.h	246;"	d
GLUT_WINDOW_ALPHA_SIZE	.\GL\freeglut_std.h	245;"	d
GLUT_WINDOW_BLUE_SIZE	.\GL\freeglut_std.h	244;"	d
GLUT_WINDOW_BORDER_WIDTH	.\GL\freeglut_ext.h	76;"	d
GLUT_WINDOW_BUFFER_SIZE	.\GL\freeglut_std.h	239;"	d
GLUT_WINDOW_COLORMAP_SIZE	.\GL\freeglut_std.h	254;"	d
GLUT_WINDOW_CURSOR	.\GL\freeglut_std.h	257;"	d
GLUT_WINDOW_DEPTH_SIZE	.\GL\freeglut_std.h	241;"	d
GLUT_WINDOW_DOUBLEBUFFER	.\GL\freeglut_std.h	250;"	d
GLUT_WINDOW_FORMAT_ID	.\GL\freeglut_std.h	271;"	d
GLUT_WINDOW_GREEN_SIZE	.\GL\freeglut_std.h	243;"	d
GLUT_WINDOW_HEADER_HEIGHT	.\GL\freeglut_ext.h	77;"	d
GLUT_WINDOW_HEIGHT	.\GL\freeglut_std.h	238;"	d
GLUT_WINDOW_NUM_CHILDREN	.\GL\freeglut_std.h	253;"	d
GLUT_WINDOW_NUM_SAMPLES	.\GL\freeglut_std.h	255;"	d
GLUT_WINDOW_PARENT	.\GL\freeglut_std.h	252;"	d
GLUT_WINDOW_RED_SIZE	.\GL\freeglut_std.h	242;"	d
GLUT_WINDOW_RGBA	.\GL\freeglut_std.h	251;"	d
GLUT_WINDOW_STENCIL_SIZE	.\GL\freeglut_std.h	240;"	d
GLUT_WINDOW_STEREO	.\GL\freeglut_std.h	256;"	d
GLUT_WINDOW_WIDTH	.\GL\freeglut_std.h	237;"	d
GLUT_WINDOW_X	.\GL\freeglut_std.h	235;"	d
GLUT_WINDOW_Y	.\GL\freeglut_std.h	236;"	d
GLUT_XLIB_IMPLEMENTATION	.\GL\freeglut_std.h	117;"	d
GLUTproc	.\GL\freeglut_ext.h	/^typedef void (*GLUTproc)();$/;"	t
GLU_AUTO_LOAD_MATRIX	.\GL\GLU.h	490;"	d
GLU_BEGIN	.\GL\GLU.h	573;"	d
GLU_CCW	.\GL\GLU.h	567;"	d
GLU_CULLING	.\GL\GLU.h	491;"	d
GLU_CW	.\GL\GLU.h	566;"	d
GLU_DISPLAY_MODE	.\GL\GLU.h	493;"	d
GLU_DOMAIN_DISTANCE	.\GL\GLU.h	502;"	d
GLU_EDGE_FLAG	.\GL\GLU.h	577;"	d
GLU_END	.\GL\GLU.h	575;"	d
GLU_ERROR	.\GL\GLU.h	576;"	d
GLU_EXTENSIONS	.\GL\GLU.h	401;"	d
GLU_EXTERIOR	.\GL\GLU.h	569;"	d
GLU_FALSE	.\GL\GLU.h	405;"	d
GLU_FILL	.\GL\GLU.h	418;"	d
GLU_FLAT	.\GL\GLU.h	412;"	d
GLU_INCOMPATIBLE_GL_VERSION	.\GL\GLU.h	397;"	d
GLU_INSIDE	.\GL\GLU.h	423;"	d
GLU_INTERIOR	.\GL\GLU.h	568;"	d
GLU_INVALID_ENUM	.\GL\GLU.h	394;"	d
GLU_INVALID_VALUE	.\GL\GLU.h	395;"	d
GLU_LINE	.\GL\GLU.h	417;"	d
GLU_MAP1_TRIM_2	.\GL\GLU.h	506;"	d
GLU_MAP1_TRIM_3	.\GL\GLU.h	507;"	d
GLU_NONE	.\GL\GLU.h	413;"	d
GLU_NURBS_ERROR1	.\GL\GLU.h	518;"	d
GLU_NURBS_ERROR10	.\GL\GLU.h	527;"	d
GLU_NURBS_ERROR11	.\GL\GLU.h	528;"	d
GLU_NURBS_ERROR12	.\GL\GLU.h	529;"	d
GLU_NURBS_ERROR13	.\GL\GLU.h	530;"	d
GLU_NURBS_ERROR14	.\GL\GLU.h	531;"	d
GLU_NURBS_ERROR15	.\GL\GLU.h	532;"	d
GLU_NURBS_ERROR16	.\GL\GLU.h	533;"	d
GLU_NURBS_ERROR17	.\GL\GLU.h	534;"	d
GLU_NURBS_ERROR18	.\GL\GLU.h	535;"	d
GLU_NURBS_ERROR19	.\GL\GLU.h	536;"	d
GLU_NURBS_ERROR2	.\GL\GLU.h	519;"	d
GLU_NURBS_ERROR20	.\GL\GLU.h	537;"	d
GLU_NURBS_ERROR21	.\GL\GLU.h	538;"	d
GLU_NURBS_ERROR22	.\GL\GLU.h	539;"	d
GLU_NURBS_ERROR23	.\GL\GLU.h	540;"	d
GLU_NURBS_ERROR24	.\GL\GLU.h	541;"	d
GLU_NURBS_ERROR25	.\GL\GLU.h	542;"	d
GLU_NURBS_ERROR26	.\GL\GLU.h	543;"	d
GLU_NURBS_ERROR27	.\GL\GLU.h	544;"	d
GLU_NURBS_ERROR28	.\GL\GLU.h	545;"	d
GLU_NURBS_ERROR29	.\GL\GLU.h	546;"	d
GLU_NURBS_ERROR3	.\GL\GLU.h	520;"	d
GLU_NURBS_ERROR30	.\GL\GLU.h	547;"	d
GLU_NURBS_ERROR31	.\GL\GLU.h	548;"	d
GLU_NURBS_ERROR32	.\GL\GLU.h	549;"	d
GLU_NURBS_ERROR33	.\GL\GLU.h	550;"	d
GLU_NURBS_ERROR34	.\GL\GLU.h	551;"	d
GLU_NURBS_ERROR35	.\GL\GLU.h	552;"	d
GLU_NURBS_ERROR36	.\GL\GLU.h	553;"	d
GLU_NURBS_ERROR37	.\GL\GLU.h	554;"	d
GLU_NURBS_ERROR4	.\GL\GLU.h	521;"	d
GLU_NURBS_ERROR5	.\GL\GLU.h	522;"	d
GLU_NURBS_ERROR6	.\GL\GLU.h	523;"	d
GLU_NURBS_ERROR7	.\GL\GLU.h	524;"	d
GLU_NURBS_ERROR8	.\GL\GLU.h	525;"	d
GLU_NURBS_ERROR9	.\GL\GLU.h	526;"	d
GLU_OUTLINE_PATCH	.\GL\GLU.h	512;"	d
GLU_OUTLINE_POLYGON	.\GL\GLU.h	511;"	d
GLU_OUTSIDE	.\GL\GLU.h	422;"	d
GLU_OUT_OF_MEMORY	.\GL\GLU.h	396;"	d
GLU_PARAMETRIC_ERROR	.\GL\GLU.h	501;"	d
GLU_PARAMETRIC_TOLERANCE	.\GL\GLU.h	494;"	d
GLU_PATH_LENGTH	.\GL\GLU.h	500;"	d
GLU_POINT	.\GL\GLU.h	416;"	d
GLU_SAMPLING_METHOD	.\GL\GLU.h	495;"	d
GLU_SAMPLING_TOLERANCE	.\GL\GLU.h	492;"	d
GLU_SILHOUETTE	.\GL\GLU.h	419;"	d
GLU_SMOOTH	.\GL\GLU.h	411;"	d
GLU_TESS_BEGIN	.\GL\GLU.h	446;"	d
GLU_TESS_BEGIN_DATA	.\GL\GLU.h	455;"	d
GLU_TESS_BOUNDARY_ONLY	.\GL\GLU.h	435;"	d
GLU_TESS_COMBINE	.\GL\GLU.h	451;"	d
GLU_TESS_COMBINE_DATA	.\GL\GLU.h	464;"	d
GLU_TESS_COORD_TOO_LARGE	.\GL\GLU.h	484;"	d
GLU_TESS_EDGE_FLAG	.\GL\GLU.h	450;"	d
GLU_TESS_EDGE_FLAG_DATA	.\GL\GLU.h	462;"	d
GLU_TESS_END	.\GL\GLU.h	448;"	d
GLU_TESS_END_DATA	.\GL\GLU.h	459;"	d
GLU_TESS_ERROR	.\GL\GLU.h	449;"	d
GLU_TESS_ERROR1	.\GL\GLU.h	471;"	d
GLU_TESS_ERROR2	.\GL\GLU.h	472;"	d
GLU_TESS_ERROR3	.\GL\GLU.h	473;"	d
GLU_TESS_ERROR4	.\GL\GLU.h	474;"	d
GLU_TESS_ERROR5	.\GL\GLU.h	475;"	d
GLU_TESS_ERROR6	.\GL\GLU.h	476;"	d
GLU_TESS_ERROR7	.\GL\GLU.h	477;"	d
GLU_TESS_ERROR8	.\GL\GLU.h	478;"	d
GLU_TESS_ERROR_DATA	.\GL\GLU.h	460;"	d
GLU_TESS_MAX_COORD	.\GL\GLU.h	431;"	d
GLU_TESS_MISSING_BEGIN_CONTOUR	.\GL\GLU.h	481;"	d
GLU_TESS_MISSING_BEGIN_POLYGON	.\GL\GLU.h	480;"	d
GLU_TESS_MISSING_END_CONTOUR	.\GL\GLU.h	483;"	d
GLU_TESS_MISSING_END_POLYGON	.\GL\GLU.h	482;"	d
GLU_TESS_NEED_COMBINE_CALLBACK	.\GL\GLU.h	485;"	d
GLU_TESS_TOLERANCE	.\GL\GLU.h	436;"	d
GLU_TESS_VERTEX	.\GL\GLU.h	447;"	d
GLU_TESS_VERTEX_DATA	.\GL\GLU.h	457;"	d
GLU_TESS_WINDING_ABS_GEQ_TWO	.\GL\GLU.h	443;"	d
GLU_TESS_WINDING_NEGATIVE	.\GL\GLU.h	442;"	d
GLU_TESS_WINDING_NONZERO	.\GL\GLU.h	440;"	d
GLU_TESS_WINDING_ODD	.\GL\GLU.h	439;"	d
GLU_TESS_WINDING_POSITIVE	.\GL\GLU.h	441;"	d
GLU_TESS_WINDING_RULE	.\GL\GLU.h	434;"	d
GLU_TRUE	.\GL\GLU.h	404;"	d
GLU_UNKNOWN	.\GL\GLU.h	570;"	d
GLU_U_STEP	.\GL\GLU.h	496;"	d
GLU_VERSION	.\GL\GLU.h	400;"	d
GLU_VERSION_1_1	.\GL\GLU.h	390;"	d
GLU_VERSION_1_2	.\GL\GLU.h	391;"	d
GLU_VERTEX	.\GL\GLU.h	574;"	d
GLU_V_STEP	.\GL\GLU.h	497;"	d
GLUnurbs	.\GL\GLU.h	/^typedef struct GLUnurbs GLUnurbs;$/;"	t	typeref:struct:GLUnurbs
GLUnurbsErrorProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUnurbsErrorProc)   (GLenum);$/;"	t
GLUnurbsObj	.\GL\GLU.h	/^typedef class GLUnurbs GLUnurbsObj;$/;"	t	typeref:class:GLUnurbs
GLUnurbsObj	.\GL\GLU.h	/^typedef struct GLUnurbs GLUnurbsObj;$/;"	t	typeref:struct:GLUnurbs
GLUquadric	.\GL\GLU.h	/^typedef struct GLUquadric GLUquadric;$/;"	t	typeref:struct:GLUquadric
GLUquadricErrorProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUquadricErrorProc) (GLenum);$/;"	t
GLUquadricObj	.\GL\GLU.h	/^typedef class GLUquadric GLUquadricObj;$/;"	t	typeref:class:GLUquadric
GLUquadricObj	.\GL\GLU.h	/^typedef struct GLUquadric GLUquadricObj;$/;"	t	typeref:struct:GLUquadric
GLUtessBeginDataProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessBeginDataProc)    (GLenum, void *);$/;"	t
GLUtessBeginProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessBeginProc)        (GLenum);$/;"	t
GLUtessCombineDataProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessCombineDataProc)  (GLdouble[3],$/;"	t
GLUtessCombineProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessCombineProc)      (GLdouble[3],$/;"	t
GLUtessEdgeFlagDataProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessEdgeFlagDataProc) (GLboolean, void *);$/;"	t
GLUtessEdgeFlagProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessEdgeFlagProc)     (GLboolean);$/;"	t
GLUtessEndDataProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessEndDataProc)      (void *);$/;"	t
GLUtessEndProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessEndProc)          (void);$/;"	t
GLUtessErrorDataProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessErrorDataProc)    (GLenum, void *);$/;"	t
GLUtessErrorProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessErrorProc)        (GLenum);$/;"	t
GLUtessVertexDataProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessVertexDataProc)   (void *, void *);$/;"	t
GLUtessVertexProc	.\GL\GLU.h	/^typedef void (CALLBACK* GLUtessVertexProc)       (void *);$/;"	t
GLUtesselator	.\GL\GLU.h	/^typedef struct GLUtesselator GLUtesselator;$/;"	t	typeref:struct:GLUtesselator
GLUtesselatorObj	.\GL\GLU.h	/^typedef class GLUtesselator GLUtesselatorObj;$/;"	t	typeref:class:GLUtesselator
GLUtesselatorObj	.\GL\GLU.h	/^typedef struct GLUtesselator GLUtesselatorObj;$/;"	t	typeref:struct:GLUtesselator
GLUtriangulatorObj	.\GL\GLU.h	/^typedef class GLUtesselator GLUtriangulatorObj;$/;"	t	typeref:class:GLUtesselator
GLUtriangulatorObj	.\GL\GLU.h	/^typedef struct GLUtesselator GLUtriangulatorObj;$/;"	t	typeref:struct:GLUtesselator
GL_2D	.\GL\GL.h	307;"	d
GL_2_BYTES	.\GL\GL.h	198;"	d
GL_3D	.\GL\GL.h	308;"	d
GL_3D_COLOR	.\GL\GL.h	309;"	d
GL_3D_COLOR_TEXTURE	.\GL\GL.h	310;"	d
GL_3_BYTES	.\GL\GL.h	199;"	d
GL_4D_COLOR_TEXTURE	.\GL\GL.h	311;"	d
GL_4_BYTES	.\GL\GL.h	200;"	d
GL_ACCUM	.\GL\GL.h	65;"	d
GL_ACCUM_ALPHA_BITS	.\GL\GL.h	544;"	d
GL_ACCUM_BLUE_BITS	.\GL\GL.h	543;"	d
GL_ACCUM_BUFFER_BIT	.\GL\GL.h	91;"	d
GL_ACCUM_CLEAR_VALUE	.\GL\GL.h	419;"	d
GL_ACCUM_GREEN_BITS	.\GL\GL.h	542;"	d
GL_ACCUM_RED_BITS	.\GL\GL.h	541;"	d
GL_ADD	.\GL\GL.h	69;"	d
GL_ALL_ATTRIB_BITS	.\GL\GL.h	102;"	d
GL_ALPHA	.\GL\GL.h	783;"	d
GL_ALPHA12	.\GL\GL.h	980;"	d
GL_ALPHA16	.\GL\GL.h	981;"	d
GL_ALPHA4	.\GL\GL.h	978;"	d
GL_ALPHA8	.\GL\GL.h	979;"	d
GL_ALPHA_BIAS	.\GL\GL.h	518;"	d
GL_ALPHA_BITS	.\GL\GL.h	538;"	d
GL_ALPHA_SCALE	.\GL\GL.h	517;"	d
GL_ALPHA_TEST	.\GL\GL.h	440;"	d
GL_ALPHA_TEST_FUNC	.\GL\GL.h	441;"	d
GL_ALPHA_TEST_REF	.\GL\GL.h	442;"	d
GL_ALWAYS	.\GL\GL.h	79;"	d
GL_AMBIENT	.\GL\GL.h	655;"	d
GL_AMBIENT_AND_DIFFUSE	.\GL\GL.h	744;"	d
GL_AND	.\GL\GL.h	700;"	d
GL_AND_INVERTED	.\GL\GL.h	703;"	d
GL_AND_REVERSE	.\GL\GL.h	701;"	d
GL_ATTRIB_STACK_DEPTH	.\GL\GL.h	438;"	d
GL_AUTO_NORMAL	.\GL\GL.h	546;"	d
GL_AUX0	.\GL\GL.h	224;"	d
GL_AUX1	.\GL\GL.h	225;"	d
GL_AUX2	.\GL\GL.h	226;"	d
GL_AUX3	.\GL\GL.h	227;"	d
GL_AUX_BUFFERS	.\GL\GL.h	450;"	d
GL_BACK	.\GL\GL.h	220;"	d
GL_BACK_LEFT	.\GL\GL.h	217;"	d
GL_BACK_RIGHT	.\GL\GL.h	218;"	d
GL_BGRA_EXT	.\GL\GL.h	1114;"	d
GL_BGR_EXT	.\GL\GL.h	1113;"	d
GL_BITMAP	.\GL\GL.h	832;"	d
GL_BITMAP_TOKEN	.\GL\GL.h	318;"	d
GL_BLEND	.\GL\GL.h	446;"	d
GL_BLEND_DST	.\GL\GL.h	444;"	d
GL_BLEND_SRC	.\GL\GL.h	445;"	d
GL_BLUE	.\GL\GL.h	782;"	d
GL_BLUE_BIAS	.\GL\GL.h	516;"	d
GL_BLUE_BITS	.\GL\GL.h	537;"	d
GL_BLUE_SCALE	.\GL\GL.h	515;"	d
GL_BYTE	.\GL\GL.h	191;"	d
GL_C3F_V3F	.\GL\GL.h	1057;"	d
GL_C4F_N3F_V3F	.\GL\GL.h	1059;"	d
GL_C4UB_V2F	.\GL\GL.h	1055;"	d
GL_C4UB_V3F	.\GL\GL.h	1056;"	d
GL_CCW	.\GL\GL.h	339;"	d
GL_CLAMP	.\GL\GL.h	956;"	d
GL_CLEAR	.\GL\GL.h	699;"	d
GL_CLIENT_ALL_ATTRIB_BITS	.\GL\GL.h	968;"	d
GL_CLIENT_ATTRIB_STACK_DEPTH	.\GL\GL.h	439;"	d
GL_CLIENT_PIXEL_STORE_BIT	.\GL\GL.h	966;"	d
GL_CLIENT_VERTEX_ARRAY_BIT	.\GL\GL.h	967;"	d
GL_CLIP_PLANE0	.\GL\GL.h	156;"	d
GL_CLIP_PLANE1	.\GL\GL.h	157;"	d
GL_CLIP_PLANE2	.\GL\GL.h	158;"	d
GL_CLIP_PLANE3	.\GL\GL.h	159;"	d
GL_CLIP_PLANE4	.\GL\GL.h	160;"	d
GL_CLIP_PLANE5	.\GL\GL.h	161;"	d
GL_COEFF	.\GL\GL.h	342;"	d
GL_COLOR	.\GL\GL.h	772;"	d
GL_COLOR_ARRAY	.\GL\GL.h	1029;"	d
GL_COLOR_ARRAY_COUNT_EXT	.\GL\GL.h	1094;"	d
GL_COLOR_ARRAY_EXT	.\GL\GL.h	1080;"	d
GL_COLOR_ARRAY_POINTER	.\GL\GL.h	1049;"	d
GL_COLOR_ARRAY_POINTER_EXT	.\GL\GL.h	1106;"	d
GL_COLOR_ARRAY_SIZE	.\GL\GL.h	1038;"	d
GL_COLOR_ARRAY_SIZE_EXT	.\GL\GL.h	1091;"	d
GL_COLOR_ARRAY_STRIDE	.\GL\GL.h	1040;"	d
GL_COLOR_ARRAY_STRIDE_EXT	.\GL\GL.h	1093;"	d
GL_COLOR_ARRAY_TYPE	.\GL\GL.h	1039;"	d
GL_COLOR_ARRAY_TYPE_EXT	.\GL\GL.h	1092;"	d
GL_COLOR_BUFFER_BIT	.\GL\GL.h	96;"	d
GL_COLOR_CLEAR_VALUE	.\GL\GL.h	457;"	d
GL_COLOR_INDEX	.\GL\GL.h	777;"	d
GL_COLOR_INDEX12_EXT	.\GL\GL.h	1132;"	d
GL_COLOR_INDEX16_EXT	.\GL\GL.h	1133;"	d
GL_COLOR_INDEX1_EXT	.\GL\GL.h	1128;"	d
GL_COLOR_INDEX2_EXT	.\GL\GL.h	1129;"	d
GL_COLOR_INDEX4_EXT	.\GL\GL.h	1130;"	d
GL_COLOR_INDEX8_EXT	.\GL\GL.h	1131;"	d
GL_COLOR_INDEXES	.\GL\GL.h	745;"	d
GL_COLOR_LOGIC_OP	.\GL\GL.h	449;"	d
GL_COLOR_MATERIAL	.\GL\GL.h	406;"	d
GL_COLOR_MATERIAL_FACE	.\GL\GL.h	404;"	d
GL_COLOR_MATERIAL_PARAMETER	.\GL\GL.h	405;"	d
GL_COLOR_TABLE_ALPHA_SIZE_EXT	.\GL\GL.h	1124;"	d
GL_COLOR_TABLE_BLUE_SIZE_EXT	.\GL\GL.h	1123;"	d
GL_COLOR_TABLE_FORMAT_EXT	.\GL\GL.h	1119;"	d
GL_COLOR_TABLE_GREEN_SIZE_EXT	.\GL\GL.h	1122;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_EXT	.\GL\GL.h	1126;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_EXT	.\GL\GL.h	1125;"	d
GL_COLOR_TABLE_RED_SIZE_EXT	.\GL\GL.h	1121;"	d
GL_COLOR_TABLE_WIDTH_EXT	.\GL\GL.h	1120;"	d
GL_COLOR_WRITEMASK	.\GL\GL.h	458;"	d
GL_COMPILE	.\GL\GL.h	683;"	d
GL_COMPILE_AND_EXECUTE	.\GL\GL.h	684;"	d
GL_CONSTANT_ATTENUATION	.\GL\GL.h	662;"	d
GL_COPY	.\GL\GL.h	702;"	d
GL_COPY_INVERTED	.\GL\GL.h	711;"	d
GL_COPY_PIXEL_TOKEN	.\GL\GL.h	320;"	d
GL_CULL_FACE	.\GL\GL.h	396;"	d
GL_CULL_FACE_MODE	.\GL\GL.h	397;"	d
GL_CURRENT_BIT	.\GL\GL.h	82;"	d
GL_CURRENT_COLOR	.\GL\GL.h	367;"	d
GL_CURRENT_INDEX	.\GL\GL.h	368;"	d
GL_CURRENT_NORMAL	.\GL\GL.h	369;"	d
GL_CURRENT_RASTER_COLOR	.\GL\GL.h	371;"	d
GL_CURRENT_RASTER_DISTANCE	.\GL\GL.h	376;"	d
GL_CURRENT_RASTER_INDEX	.\GL\GL.h	372;"	d
GL_CURRENT_RASTER_POSITION	.\GL\GL.h	374;"	d
GL_CURRENT_RASTER_POSITION_VALID	.\GL\GL.h	375;"	d
GL_CURRENT_RASTER_TEXTURE_COORDS	.\GL\GL.h	373;"	d
GL_CURRENT_TEXTURE_COORDS	.\GL\GL.h	370;"	d
GL_CW	.\GL\GL.h	338;"	d
GL_DECAL	.\GL\GL.h	908;"	d
GL_DECR	.\GL\GL.h	885;"	d
GL_DEPTH	.\GL\GL.h	773;"	d
GL_DEPTH_BIAS	.\GL\GL.h	520;"	d
GL_DEPTH_BITS	.\GL\GL.h	539;"	d
GL_DEPTH_BUFFER_BIT	.\GL\GL.h	90;"	d
GL_DEPTH_CLEAR_VALUE	.\GL\GL.h	417;"	d
GL_DEPTH_COMPONENT	.\GL\GL.h	779;"	d
GL_DEPTH_FUNC	.\GL\GL.h	418;"	d
GL_DEPTH_RANGE	.\GL\GL.h	414;"	d
GL_DEPTH_SCALE	.\GL\GL.h	519;"	d
GL_DEPTH_TEST	.\GL\GL.h	415;"	d
GL_DEPTH_WRITEMASK	.\GL\GL.h	416;"	d
GL_DIFFUSE	.\GL\GL.h	656;"	d
GL_DITHER	.\GL\GL.h	443;"	d
GL_DOMAIN	.\GL\GL.h	344;"	d
GL_DONT_CARE	.\GL\GL.h	621;"	d
GL_DOUBLE	.\GL\GL.h	201;"	d
GL_DOUBLEBUFFER	.\GL\GL.h	461;"	d
GL_DOUBLE_EXT	.\GL\GL.h	1110;"	d
GL_DRAW_BUFFER	.\GL\GL.h	451;"	d
GL_DRAW_PIXEL_TOKEN	.\GL\GL.h	319;"	d
GL_DST_ALPHA	.\GL\GL.h	123;"	d
GL_DST_COLOR	.\GL\GL.h	129;"	d
GL_EDGE_FLAG	.\GL\GL.h	395;"	d
GL_EDGE_FLAG_ARRAY	.\GL\GL.h	1032;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	.\GL\GL.h	1103;"	d
GL_EDGE_FLAG_ARRAY_EXT	.\GL\GL.h	1083;"	d
GL_EDGE_FLAG_ARRAY_POINTER	.\GL\GL.h	1052;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	.\GL\GL.h	1109;"	d
GL_EDGE_FLAG_ARRAY_STRIDE	.\GL\GL.h	1046;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	.\GL\GL.h	1102;"	d
GL_EMISSION	.\GL\GL.h	742;"	d
GL_ENABLE_BIT	.\GL\GL.h	95;"	d
GL_EQUAL	.\GL\GL.h	74;"	d
GL_EQUIV	.\GL\GL.h	708;"	d
GL_EVAL_BIT	.\GL\GL.h	98;"	d
GL_EXP	.\GL\GL.h	325;"	d
GL_EXP2	.\GL\GL.h	326;"	d
GL_EXTENSIONS	.\GL\GL.h	892;"	d
GL_EXT_bgra	.\GL\GL.h	1070;"	d
GL_EXT_paletted_texture	.\GL\GL.h	1071;"	d
GL_EXT_vertex_array	.\GL\GL.h	1069;"	d
GL_EYE_LINEAR	.\GL\GL.h	920;"	d
GL_EYE_PLANE	.\GL\GL.h	927;"	d
GL_FALSE	.\GL\GL.h	139;"	d
GL_FASTEST	.\GL\GL.h	622;"	d
GL_FEEDBACK	.\GL\GL.h	862;"	d
GL_FEEDBACK_BUFFER_POINTER	.\GL\GL.h	571;"	d
GL_FEEDBACK_BUFFER_SIZE	.\GL\GL.h	572;"	d
GL_FEEDBACK_BUFFER_TYPE	.\GL\GL.h	573;"	d
GL_FILL	.\GL\GL.h	844;"	d
GL_FLAT	.\GL\GL.h	866;"	d
GL_FLOAT	.\GL\GL.h	197;"	d
GL_FOG	.\GL\GL.h	407;"	d
GL_FOG_BIT	.\GL\GL.h	89;"	d
GL_FOG_COLOR	.\GL\GL.h	413;"	d
GL_FOG_DENSITY	.\GL\GL.h	409;"	d
GL_FOG_END	.\GL\GL.h	411;"	d
GL_FOG_HINT	.\GL\GL.h	468;"	d
GL_FOG_INDEX	.\GL\GL.h	408;"	d
GL_FOG_MODE	.\GL\GL.h	412;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	.\GL\GL.h	1144;"	d
GL_FOG_START	.\GL\GL.h	410;"	d
GL_FRONT	.\GL\GL.h	219;"	d
GL_FRONT_AND_BACK	.\GL\GL.h	223;"	d
GL_FRONT_FACE	.\GL\GL.h	398;"	d
GL_FRONT_LEFT	.\GL\GL.h	215;"	d
GL_FRONT_RIGHT	.\GL\GL.h	216;"	d
GL_GEQUAL	.\GL\GL.h	78;"	d
GL_GREATER	.\GL\GL.h	76;"	d
GL_GREEN	.\GL\GL.h	781;"	d
GL_GREEN_BIAS	.\GL\GL.h	514;"	d
GL_GREEN_BITS	.\GL\GL.h	536;"	d
GL_GREEN_SCALE	.\GL\GL.h	513;"	d
GL_HINT_BIT	.\GL\GL.h	97;"	d
GL_INCR	.\GL\GL.h	884;"	d
GL_INDEX_ARRAY	.\GL\GL.h	1030;"	d
GL_INDEX_ARRAY_COUNT_EXT	.\GL\GL.h	1097;"	d
GL_INDEX_ARRAY_EXT	.\GL\GL.h	1081;"	d
GL_INDEX_ARRAY_POINTER	.\GL\GL.h	1050;"	d
GL_INDEX_ARRAY_POINTER_EXT	.\GL\GL.h	1107;"	d
GL_INDEX_ARRAY_STRIDE	.\GL\GL.h	1042;"	d
GL_INDEX_ARRAY_STRIDE_EXT	.\GL\GL.h	1096;"	d
GL_INDEX_ARRAY_TYPE	.\GL\GL.h	1041;"	d
GL_INDEX_ARRAY_TYPE_EXT	.\GL\GL.h	1095;"	d
GL_INDEX_BITS	.\GL\GL.h	534;"	d
GL_INDEX_CLEAR_VALUE	.\GL\GL.h	455;"	d
GL_INDEX_LOGIC_OP	.\GL\GL.h	448;"	d
GL_INDEX_MODE	.\GL\GL.h	459;"	d
GL_INDEX_OFFSET	.\GL\GL.h	508;"	d
GL_INDEX_SHIFT	.\GL\GL.h	507;"	d
GL_INDEX_WRITEMASK	.\GL\GL.h	456;"	d
GL_INT	.\GL\GL.h	195;"	d
GL_INTENSITY	.\GL\GL.h	992;"	d
GL_INTENSITY12	.\GL\GL.h	995;"	d
GL_INTENSITY16	.\GL\GL.h	996;"	d
GL_INTENSITY4	.\GL\GL.h	993;"	d
GL_INTENSITY8	.\GL\GL.h	994;"	d
GL_INVALID_ENUM	.\GL\GL.h	299;"	d
GL_INVALID_OPERATION	.\GL\GL.h	301;"	d
GL_INVALID_VALUE	.\GL\GL.h	300;"	d
GL_INVERT	.\GL\GL.h	709;"	d
GL_KEEP	.\GL\GL.h	882;"	d
GL_LEFT	.\GL\GL.h	221;"	d
GL_LEQUAL	.\GL\GL.h	75;"	d
GL_LESS	.\GL\GL.h	73;"	d
GL_LIGHT0	.\GL\GL.h	645;"	d
GL_LIGHT1	.\GL\GL.h	646;"	d
GL_LIGHT2	.\GL\GL.h	647;"	d
GL_LIGHT3	.\GL\GL.h	648;"	d
GL_LIGHT4	.\GL\GL.h	649;"	d
GL_LIGHT5	.\GL\GL.h	650;"	d
GL_LIGHT6	.\GL\GL.h	651;"	d
GL_LIGHT7	.\GL\GL.h	652;"	d
GL_LIGHTING	.\GL\GL.h	399;"	d
GL_LIGHTING_BIT	.\GL\GL.h	88;"	d
GL_LIGHT_MODEL_AMBIENT	.\GL\GL.h	402;"	d
GL_LIGHT_MODEL_LOCAL_VIEWER	.\GL\GL.h	400;"	d
GL_LIGHT_MODEL_TWO_SIDE	.\GL\GL.h	401;"	d
GL_LINE	.\GL\GL.h	843;"	d
GL_LINEAR	.\GL\GL.h	931;"	d
GL_LINEAR_ATTENUATION	.\GL\GL.h	663;"	d
GL_LINEAR_MIPMAP_LINEAR	.\GL\GL.h	939;"	d
GL_LINEAR_MIPMAP_NEAREST	.\GL\GL.h	937;"	d
GL_LINES	.\GL\GL.h	106;"	d
GL_LINE_BIT	.\GL\GL.h	84;"	d
GL_LINE_LOOP	.\GL\GL.h	107;"	d
GL_LINE_RESET_TOKEN	.\GL\GL.h	321;"	d
GL_LINE_SMOOTH	.\GL\GL.h	381;"	d
GL_LINE_SMOOTH_HINT	.\GL\GL.h	466;"	d
GL_LINE_STIPPLE	.\GL\GL.h	385;"	d
GL_LINE_STIPPLE_PATTERN	.\GL\GL.h	386;"	d
GL_LINE_STIPPLE_REPEAT	.\GL\GL.h	387;"	d
GL_LINE_STRIP	.\GL\GL.h	108;"	d
GL_LINE_TOKEN	.\GL\GL.h	316;"	d
GL_LINE_WIDTH	.\GL\GL.h	382;"	d
GL_LINE_WIDTH_GRANULARITY	.\GL\GL.h	384;"	d
GL_LINE_WIDTH_RANGE	.\GL\GL.h	383;"	d
GL_LIST_BASE	.\GL\GL.h	390;"	d
GL_LIST_BIT	.\GL\GL.h	99;"	d
GL_LIST_INDEX	.\GL\GL.h	391;"	d
GL_LIST_MODE	.\GL\GL.h	388;"	d
GL_LOAD	.\GL\GL.h	66;"	d
GL_LOGIC_OP	.\GL\GL.h	1147;"	d
GL_LOGIC_OP_MODE	.\GL\GL.h	447;"	d
GL_LUMINANCE	.\GL\GL.h	786;"	d
GL_LUMINANCE12	.\GL\GL.h	984;"	d
GL_LUMINANCE12_ALPHA12	.\GL\GL.h	990;"	d
GL_LUMINANCE12_ALPHA4	.\GL\GL.h	989;"	d
GL_LUMINANCE16	.\GL\GL.h	985;"	d
GL_LUMINANCE16_ALPHA16	.\GL\GL.h	991;"	d
GL_LUMINANCE4	.\GL\GL.h	982;"	d
GL_LUMINANCE4_ALPHA4	.\GL\GL.h	986;"	d
GL_LUMINANCE6_ALPHA2	.\GL\GL.h	987;"	d
GL_LUMINANCE8	.\GL\GL.h	983;"	d
GL_LUMINANCE8_ALPHA8	.\GL\GL.h	988;"	d
GL_LUMINANCE_ALPHA	.\GL\GL.h	787;"	d
GL_MAP1_COLOR_4	.\GL\GL.h	547;"	d
GL_MAP1_GRID_DOMAIN	.\GL\GL.h	565;"	d
GL_MAP1_GRID_SEGMENTS	.\GL\GL.h	566;"	d
GL_MAP1_INDEX	.\GL\GL.h	548;"	d
GL_MAP1_NORMAL	.\GL\GL.h	549;"	d
GL_MAP1_TEXTURE_COORD_1	.\GL\GL.h	550;"	d
GL_MAP1_TEXTURE_COORD_2	.\GL\GL.h	551;"	d
GL_MAP1_TEXTURE_COORD_3	.\GL\GL.h	552;"	d
GL_MAP1_TEXTURE_COORD_4	.\GL\GL.h	553;"	d
GL_MAP1_VERTEX_3	.\GL\GL.h	554;"	d
GL_MAP1_VERTEX_4	.\GL\GL.h	555;"	d
GL_MAP2_COLOR_4	.\GL\GL.h	556;"	d
GL_MAP2_GRID_DOMAIN	.\GL\GL.h	567;"	d
GL_MAP2_GRID_SEGMENTS	.\GL\GL.h	568;"	d
GL_MAP2_INDEX	.\GL\GL.h	557;"	d
GL_MAP2_NORMAL	.\GL\GL.h	558;"	d
GL_MAP2_TEXTURE_COORD_1	.\GL\GL.h	559;"	d
GL_MAP2_TEXTURE_COORD_2	.\GL\GL.h	560;"	d
GL_MAP2_TEXTURE_COORD_3	.\GL\GL.h	561;"	d
GL_MAP2_TEXTURE_COORD_4	.\GL\GL.h	562;"	d
GL_MAP2_VERTEX_3	.\GL\GL.h	563;"	d
GL_MAP2_VERTEX_4	.\GL\GL.h	564;"	d
GL_MAP_COLOR	.\GL\GL.h	505;"	d
GL_MAP_STENCIL	.\GL\GL.h	506;"	d
GL_MATRIX_MODE	.\GL\GL.h	429;"	d
GL_MAX_ATTRIB_STACK_DEPTH	.\GL\GL.h	526;"	d
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	.\GL\GL.h	532;"	d
GL_MAX_CLIP_PLANES	.\GL\GL.h	523;"	d
GL_MAX_ELEMENTS_INDICES_WIN	.\GL\GL.h	1137;"	d
GL_MAX_ELEMENTS_VERTICES_WIN	.\GL\GL.h	1136;"	d
GL_MAX_EVAL_ORDER	.\GL\GL.h	521;"	d
GL_MAX_LIGHTS	.\GL\GL.h	522;"	d
GL_MAX_LIST_NESTING	.\GL\GL.h	389;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	.\GL\GL.h	527;"	d
GL_MAX_NAME_STACK_DEPTH	.\GL\GL.h	528;"	d
GL_MAX_PIXEL_MAP_TABLE	.\GL\GL.h	525;"	d
GL_MAX_PROJECTION_STACK_DEPTH	.\GL\GL.h	529;"	d
GL_MAX_TEXTURE_SIZE	.\GL\GL.h	524;"	d
GL_MAX_TEXTURE_STACK_DEPTH	.\GL\GL.h	530;"	d
GL_MAX_VIEWPORT_DIMS	.\GL\GL.h	531;"	d
GL_MODELVIEW	.\GL\GL.h	751;"	d
GL_MODELVIEW_MATRIX	.\GL\GL.h	435;"	d
GL_MODELVIEW_STACK_DEPTH	.\GL\GL.h	432;"	d
GL_MODULATE	.\GL\GL.h	907;"	d
GL_MULT	.\GL\GL.h	68;"	d
GL_N3F_V3F	.\GL\GL.h	1058;"	d
GL_NAME_STACK_DEPTH	.\GL\GL.h	545;"	d
GL_NAND	.\GL\GL.h	713;"	d
GL_NEAREST	.\GL\GL.h	930;"	d
GL_NEAREST_MIPMAP_LINEAR	.\GL\GL.h	938;"	d
GL_NEAREST_MIPMAP_NEAREST	.\GL\GL.h	936;"	d
GL_NEVER	.\GL\GL.h	72;"	d
GL_NICEST	.\GL\GL.h	623;"	d
GL_NONE	.\GL\GL.h	214;"	d
GL_NOOP	.\GL\GL.h	704;"	d
GL_NOR	.\GL\GL.h	707;"	d
GL_NORMALIZE	.\GL\GL.h	430;"	d
GL_NORMAL_ARRAY	.\GL\GL.h	1028;"	d
GL_NORMAL_ARRAY_COUNT_EXT	.\GL\GL.h	1090;"	d
GL_NORMAL_ARRAY_EXT	.\GL\GL.h	1079;"	d
GL_NORMAL_ARRAY_POINTER	.\GL\GL.h	1048;"	d
GL_NORMAL_ARRAY_POINTER_EXT	.\GL\GL.h	1105;"	d
GL_NORMAL_ARRAY_STRIDE	.\GL\GL.h	1037;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	.\GL\GL.h	1089;"	d
GL_NORMAL_ARRAY_TYPE	.\GL\GL.h	1036;"	d
GL_NORMAL_ARRAY_TYPE_EXT	.\GL\GL.h	1088;"	d
GL_NOTEQUAL	.\GL\GL.h	77;"	d
GL_NO_ERROR	.\GL\GL.h	298;"	d
GL_OBJECT_LINEAR	.\GL\GL.h	921;"	d
GL_OBJECT_PLANE	.\GL\GL.h	926;"	d
GL_ONE	.\GL\GL.h	118;"	d
GL_ONE_MINUS_DST_ALPHA	.\GL\GL.h	124;"	d
GL_ONE_MINUS_DST_COLOR	.\GL\GL.h	130;"	d
GL_ONE_MINUS_SRC_ALPHA	.\GL\GL.h	122;"	d
GL_ONE_MINUS_SRC_COLOR	.\GL\GL.h	120;"	d
GL_OR	.\GL\GL.h	706;"	d
GL_ORDER	.\GL\GL.h	343;"	d
GL_OR_INVERTED	.\GL\GL.h	712;"	d
GL_OR_REVERSE	.\GL\GL.h	710;"	d
GL_OUT_OF_MEMORY	.\GL\GL.h	304;"	d
GL_PACK_ALIGNMENT	.\GL\GL.h	504;"	d
GL_PACK_LSB_FIRST	.\GL\GL.h	500;"	d
GL_PACK_ROW_LENGTH	.\GL\GL.h	501;"	d
GL_PACK_SKIP_PIXELS	.\GL\GL.h	503;"	d
GL_PACK_SKIP_ROWS	.\GL\GL.h	502;"	d
GL_PACK_SWAP_BYTES	.\GL\GL.h	499;"	d
GL_PASS_THROUGH_TOKEN	.\GL\GL.h	314;"	d
GL_PERSPECTIVE_CORRECTION_HINT	.\GL\GL.h	464;"	d
GL_PHONG_HINT_WIN	.\GL\GL.h	1141;"	d
GL_PHONG_WIN	.\GL\GL.h	1140;"	d
GL_PIXEL_MAP_A_TO_A	.\GL\GL.h	482;"	d
GL_PIXEL_MAP_A_TO_A_SIZE	.\GL\GL.h	492;"	d
GL_PIXEL_MAP_B_TO_B	.\GL\GL.h	481;"	d
GL_PIXEL_MAP_B_TO_B_SIZE	.\GL\GL.h	491;"	d
GL_PIXEL_MAP_G_TO_G	.\GL\GL.h	480;"	d
GL_PIXEL_MAP_G_TO_G_SIZE	.\GL\GL.h	490;"	d
GL_PIXEL_MAP_I_TO_A	.\GL\GL.h	478;"	d
GL_PIXEL_MAP_I_TO_A_SIZE	.\GL\GL.h	488;"	d
GL_PIXEL_MAP_I_TO_B	.\GL\GL.h	477;"	d
GL_PIXEL_MAP_I_TO_B_SIZE	.\GL\GL.h	487;"	d
GL_PIXEL_MAP_I_TO_G	.\GL\GL.h	476;"	d
GL_PIXEL_MAP_I_TO_G_SIZE	.\GL\GL.h	486;"	d
GL_PIXEL_MAP_I_TO_I	.\GL\GL.h	473;"	d
GL_PIXEL_MAP_I_TO_I_SIZE	.\GL\GL.h	483;"	d
GL_PIXEL_MAP_I_TO_R	.\GL\GL.h	475;"	d
GL_PIXEL_MAP_I_TO_R_SIZE	.\GL\GL.h	485;"	d
GL_PIXEL_MAP_R_TO_R	.\GL\GL.h	479;"	d
GL_PIXEL_MAP_R_TO_R_SIZE	.\GL\GL.h	489;"	d
GL_PIXEL_MAP_S_TO_S	.\GL\GL.h	474;"	d
GL_PIXEL_MAP_S_TO_S_SIZE	.\GL\GL.h	484;"	d
GL_PIXEL_MODE_BIT	.\GL\GL.h	87;"	d
GL_POINT	.\GL\GL.h	842;"	d
GL_POINTS	.\GL\GL.h	105;"	d
GL_POINT_BIT	.\GL\GL.h	83;"	d
GL_POINT_SIZE	.\GL\GL.h	378;"	d
GL_POINT_SIZE_GRANULARITY	.\GL\GL.h	380;"	d
GL_POINT_SIZE_RANGE	.\GL\GL.h	379;"	d
GL_POINT_SMOOTH	.\GL\GL.h	377;"	d
GL_POINT_SMOOTH_HINT	.\GL\GL.h	465;"	d
GL_POINT_TOKEN	.\GL\GL.h	315;"	d
GL_POLYGON	.\GL\GL.h	114;"	d
GL_POLYGON_BIT	.\GL\GL.h	85;"	d
GL_POLYGON_MODE	.\GL\GL.h	392;"	d
GL_POLYGON_OFFSET_FACTOR	.\GL\GL.h	971;"	d
GL_POLYGON_OFFSET_FILL	.\GL\GL.h	975;"	d
GL_POLYGON_OFFSET_LINE	.\GL\GL.h	974;"	d
GL_POLYGON_OFFSET_POINT	.\GL\GL.h	973;"	d
GL_POLYGON_OFFSET_UNITS	.\GL\GL.h	972;"	d
GL_POLYGON_SMOOTH	.\GL\GL.h	393;"	d
GL_POLYGON_SMOOTH_HINT	.\GL\GL.h	467;"	d
GL_POLYGON_STIPPLE	.\GL\GL.h	394;"	d
GL_POLYGON_STIPPLE_BIT	.\GL\GL.h	86;"	d
GL_POLYGON_TOKEN	.\GL\GL.h	317;"	d
GL_POSITION	.\GL\GL.h	658;"	d
GL_PROJECTION	.\GL\GL.h	752;"	d
GL_PROJECTION_MATRIX	.\GL\GL.h	436;"	d
GL_PROJECTION_STACK_DEPTH	.\GL\GL.h	433;"	d
GL_PROXY_TEXTURE_1D	.\GL\GL.h	1017;"	d
GL_PROXY_TEXTURE_2D	.\GL\GL.h	1018;"	d
GL_Q	.\GL\GL.h	898;"	d
GL_QUADRATIC_ATTENUATION	.\GL\GL.h	664;"	d
GL_QUADS	.\GL\GL.h	112;"	d
GL_QUAD_STRIP	.\GL\GL.h	113;"	d
GL_R	.\GL\GL.h	897;"	d
GL_R3_G3_B2	.\GL\GL.h	997;"	d
GL_READ_BUFFER	.\GL\GL.h	452;"	d
GL_RED	.\GL\GL.h	780;"	d
GL_RED_BIAS	.\GL\GL.h	510;"	d
GL_RED_BITS	.\GL\GL.h	535;"	d
GL_RED_SCALE	.\GL\GL.h	509;"	d
GL_RENDER	.\GL\GL.h	861;"	d
GL_RENDERER	.\GL\GL.h	890;"	d
GL_RENDER_MODE	.\GL\GL.h	463;"	d
GL_REPEAT	.\GL\GL.h	957;"	d
GL_REPLACE	.\GL\GL.h	883;"	d
GL_RETURN	.\GL\GL.h	67;"	d
GL_RGB	.\GL\GL.h	784;"	d
GL_RGB10	.\GL\GL.h	1001;"	d
GL_RGB10_A2	.\GL\GL.h	1008;"	d
GL_RGB12	.\GL\GL.h	1002;"	d
GL_RGB16	.\GL\GL.h	1003;"	d
GL_RGB4	.\GL\GL.h	998;"	d
GL_RGB5	.\GL\GL.h	999;"	d
GL_RGB5_A1	.\GL\GL.h	1006;"	d
GL_RGB8	.\GL\GL.h	1000;"	d
GL_RGBA	.\GL\GL.h	785;"	d
GL_RGBA12	.\GL\GL.h	1009;"	d
GL_RGBA16	.\GL\GL.h	1010;"	d
GL_RGBA2	.\GL\GL.h	1004;"	d
GL_RGBA4	.\GL\GL.h	1005;"	d
GL_RGBA8	.\GL\GL.h	1007;"	d
GL_RGBA_MODE	.\GL\GL.h	460;"	d
GL_RIGHT	.\GL\GL.h	222;"	d
GL_S	.\GL\GL.h	895;"	d
GL_SCISSOR_BIT	.\GL\GL.h	101;"	d
GL_SCISSOR_BOX	.\GL\GL.h	453;"	d
GL_SCISSOR_TEST	.\GL\GL.h	454;"	d
GL_SELECT	.\GL\GL.h	863;"	d
GL_SELECTION_BUFFER_POINTER	.\GL\GL.h	574;"	d
GL_SELECTION_BUFFER_SIZE	.\GL\GL.h	575;"	d
GL_SET	.\GL\GL.h	714;"	d
GL_SHADE_MODEL	.\GL\GL.h	403;"	d
GL_SHININESS	.\GL\GL.h	743;"	d
GL_SHORT	.\GL\GL.h	193;"	d
GL_SMOOTH	.\GL\GL.h	867;"	d
GL_SPECULAR	.\GL\GL.h	657;"	d
GL_SPHERE_MAP	.\GL\GL.h	922;"	d
GL_SPOT_CUTOFF	.\GL\GL.h	661;"	d
GL_SPOT_DIRECTION	.\GL\GL.h	659;"	d
GL_SPOT_EXPONENT	.\GL\GL.h	660;"	d
GL_SRC_ALPHA	.\GL\GL.h	121;"	d
GL_SRC_ALPHA_SATURATE	.\GL\GL.h	131;"	d
GL_SRC_COLOR	.\GL\GL.h	119;"	d
GL_STACK_OVERFLOW	.\GL\GL.h	302;"	d
GL_STACK_UNDERFLOW	.\GL\GL.h	303;"	d
GL_STENCIL	.\GL\GL.h	774;"	d
GL_STENCIL_BITS	.\GL\GL.h	540;"	d
GL_STENCIL_BUFFER_BIT	.\GL\GL.h	92;"	d
GL_STENCIL_CLEAR_VALUE	.\GL\GL.h	421;"	d
GL_STENCIL_FAIL	.\GL\GL.h	424;"	d
GL_STENCIL_FUNC	.\GL\GL.h	422;"	d
GL_STENCIL_INDEX	.\GL\GL.h	778;"	d
GL_STENCIL_PASS_DEPTH_FAIL	.\GL\GL.h	425;"	d
GL_STENCIL_PASS_DEPTH_PASS	.\GL\GL.h	426;"	d
GL_STENCIL_REF	.\GL\GL.h	427;"	d
GL_STENCIL_TEST	.\GL\GL.h	420;"	d
GL_STENCIL_VALUE_MASK	.\GL\GL.h	423;"	d
GL_STENCIL_WRITEMASK	.\GL\GL.h	428;"	d
GL_STEREO	.\GL\GL.h	462;"	d
GL_SUBPIXEL_BITS	.\GL\GL.h	533;"	d
GL_T	.\GL\GL.h	896;"	d
GL_T2F_C3F_V3F	.\GL\GL.h	1063;"	d
GL_T2F_C4F_N3F_V3F	.\GL\GL.h	1065;"	d
GL_T2F_C4UB_V3F	.\GL\GL.h	1062;"	d
GL_T2F_N3F_V3F	.\GL\GL.h	1064;"	d
GL_T2F_V3F	.\GL\GL.h	1060;"	d
GL_T4F_C4F_N3F_V4F	.\GL\GL.h	1066;"	d
GL_T4F_V4F	.\GL\GL.h	1061;"	d
GL_TEXTURE	.\GL\GL.h	753;"	d
GL_TEXTURE_1D	.\GL\GL.h	569;"	d
GL_TEXTURE_2D	.\GL\GL.h	570;"	d
GL_TEXTURE_ALPHA_SIZE	.\GL\GL.h	1014;"	d
GL_TEXTURE_BINDING_1D	.\GL\GL.h	1023;"	d
GL_TEXTURE_BINDING_2D	.\GL\GL.h	1024;"	d
GL_TEXTURE_BIT	.\GL\GL.h	100;"	d
GL_TEXTURE_BLUE_SIZE	.\GL\GL.h	1013;"	d
GL_TEXTURE_BORDER	.\GL\GL.h	610;"	d
GL_TEXTURE_BORDER_COLOR	.\GL\GL.h	609;"	d
GL_TEXTURE_COMPONENTS	.\GL\GL.h	1148;"	d
GL_TEXTURE_COORD_ARRAY	.\GL\GL.h	1031;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	.\GL\GL.h	1101;"	d
GL_TEXTURE_COORD_ARRAY_EXT	.\GL\GL.h	1082;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	.\GL\GL.h	1051;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	.\GL\GL.h	1108;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	.\GL\GL.h	1043;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	.\GL\GL.h	1098;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	.\GL\GL.h	1045;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	.\GL\GL.h	1100;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	.\GL\GL.h	1044;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	.\GL\GL.h	1099;"	d
GL_TEXTURE_ENV	.\GL\GL.h	917;"	d
GL_TEXTURE_ENV_COLOR	.\GL\GL.h	914;"	d
GL_TEXTURE_ENV_MODE	.\GL\GL.h	913;"	d
GL_TEXTURE_GEN_MODE	.\GL\GL.h	925;"	d
GL_TEXTURE_GEN_Q	.\GL\GL.h	472;"	d
GL_TEXTURE_GEN_R	.\GL\GL.h	471;"	d
GL_TEXTURE_GEN_S	.\GL\GL.h	469;"	d
GL_TEXTURE_GEN_T	.\GL\GL.h	470;"	d
GL_TEXTURE_GREEN_SIZE	.\GL\GL.h	1012;"	d
GL_TEXTURE_HEIGHT	.\GL\GL.h	607;"	d
GL_TEXTURE_INTENSITY_SIZE	.\GL\GL.h	1016;"	d
GL_TEXTURE_INTERNAL_FORMAT	.\GL\GL.h	608;"	d
GL_TEXTURE_LUMINANCE_SIZE	.\GL\GL.h	1015;"	d
GL_TEXTURE_MAG_FILTER	.\GL\GL.h	942;"	d
GL_TEXTURE_MATRIX	.\GL\GL.h	437;"	d
GL_TEXTURE_MIN_FILTER	.\GL\GL.h	943;"	d
GL_TEXTURE_PRIORITY	.\GL\GL.h	1021;"	d
GL_TEXTURE_RED_SIZE	.\GL\GL.h	1011;"	d
GL_TEXTURE_RESIDENT	.\GL\GL.h	1022;"	d
GL_TEXTURE_STACK_DEPTH	.\GL\GL.h	434;"	d
GL_TEXTURE_WIDTH	.\GL\GL.h	606;"	d
GL_TEXTURE_WRAP_S	.\GL\GL.h	944;"	d
GL_TEXTURE_WRAP_T	.\GL\GL.h	945;"	d
GL_TRANSFORM_BIT	.\GL\GL.h	94;"	d
GL_TRIANGLES	.\GL\GL.h	109;"	d
GL_TRIANGLE_FAN	.\GL\GL.h	111;"	d
GL_TRIANGLE_STRIP	.\GL\GL.h	110;"	d
GL_TRUE	.\GL\GL.h	138;"	d
GL_UNPACK_ALIGNMENT	.\GL\GL.h	498;"	d
GL_UNPACK_LSB_FIRST	.\GL\GL.h	494;"	d
GL_UNPACK_ROW_LENGTH	.\GL\GL.h	495;"	d
GL_UNPACK_SKIP_PIXELS	.\GL\GL.h	497;"	d
GL_UNPACK_SKIP_ROWS	.\GL\GL.h	496;"	d
GL_UNPACK_SWAP_BYTES	.\GL\GL.h	493;"	d
GL_UNSIGNED_BYTE	.\GL\GL.h	192;"	d
GL_UNSIGNED_INT	.\GL\GL.h	196;"	d
GL_UNSIGNED_SHORT	.\GL\GL.h	194;"	d
GL_V2F	.\GL\GL.h	1053;"	d
GL_V3F	.\GL\GL.h	1054;"	d
GL_VENDOR	.\GL\GL.h	889;"	d
GL_VERSION	.\GL\GL.h	891;"	d
GL_VERSION_1_1	.\GL\GL.h	62;"	d
GL_VERTEX_ARRAY	.\GL\GL.h	1027;"	d
GL_VERTEX_ARRAY_COUNT_EXT	.\GL\GL.h	1087;"	d
GL_VERTEX_ARRAY_EXT	.\GL\GL.h	1078;"	d
GL_VERTEX_ARRAY_POINTER	.\GL\GL.h	1047;"	d
GL_VERTEX_ARRAY_POINTER_EXT	.\GL\GL.h	1104;"	d
GL_VERTEX_ARRAY_SIZE	.\GL\GL.h	1033;"	d
GL_VERTEX_ARRAY_SIZE_EXT	.\GL\GL.h	1084;"	d
GL_VERTEX_ARRAY_STRIDE	.\GL\GL.h	1035;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	.\GL\GL.h	1086;"	d
GL_VERTEX_ARRAY_TYPE	.\GL\GL.h	1034;"	d
GL_VERTEX_ARRAY_TYPE_EXT	.\GL\GL.h	1085;"	d
GL_VIEWPORT	.\GL\GL.h	431;"	d
GL_VIEWPORT_BIT	.\GL\GL.h	93;"	d
GL_WIN_draw_range_elements	.\GL\GL.h	1073;"	d
GL_WIN_swap_hint	.\GL\GL.h	1072;"	d
GL_XOR	.\GL\GL.h	705;"	d
GL_ZERO	.\GL\GL.h	117;"	d
GL_ZOOM_X	.\GL\GL.h	511;"	d
GL_ZOOM_Y	.\GL\GL.h	512;"	d
GLbitfield	.\GL\GL.h	/^typedef unsigned int GLbitfield;$/;"	t
GLbitfield	.\tags	/^GLbitfield	.\\GL\\GL.h	\/^typedef unsigned int GLbitfield;$\/;"	t$/;"	t	file:
GLboolean	.\GL\GL.h	/^typedef unsigned char GLboolean;$/;"	t
GLbyte	.\GL\GL.h	/^typedef signed char GLbyte;$/;"	t
GLclampd	.\GL\GL.h	/^typedef double GLclampd;$/;"	t
GLclampf	.\GL\GL.h	/^typedef float GLclampf;$/;"	t
GLdouble	.\GL\GL.h	/^typedef double GLdouble;$/;"	t
GLdouble	.\tags	/^GLdouble	.\\GL\\GL.h	\/^typedef double GLdouble;$\/;"	t$/;"	t	file:
GLenum	.\GL\GL.h	/^typedef unsigned int GLenum;$/;"	t
GLenum	.\tags	/^GLenum	.\\GL\\GL.h	\/^typedef unsigned int GLenum;$\/;"	t$/;"	t	file:
GLfloat	.\GL\GL.h	/^typedef float GLfloat;$/;"	t
GLfloat	.\tags	/^GLfloat	.\\GL\\GL.h	\/^typedef float GLfloat;$\/;"	t$/;"	t	file:
GLint	.\GL\GL.h	/^typedef int GLint;$/;"	t
GLshort	.\GL\GL.h	/^typedef short GLshort;$/;"	t
GLshort	.\tags	/^GLshort	.\\GL\\GL.h	\/^typedef short GLshort;$\/;"	t$/;"	t	file:
GLsizei	.\GL\GL.h	/^typedef int GLsizei;$/;"	t
GLsizei	.\tags	/^GLsizei	.\\GL\\GL.h	\/^typedef int GLsizei;$\/;"	t$/;"	t	file:
GLubyte	.\GL\GL.h	/^typedef unsigned char GLubyte;$/;"	t
GLuint	.\GL\GL.h	/^typedef unsigned int GLuint;$/;"	t
GLushort	.\GL\GL.h	/^typedef unsigned short GLushort;$/;"	t
GLushort	.\tags	/^GLushort	.\\GL\\GL.h	\/^typedef unsigned short GLushort;$\/;"	t$/;"	t	file:
GLvoid	.\GL\GL.h	/^typedef void GLvoid;$/;"	t
GLvoid	.\tags	/^GLvoid	.\\GL\\GL.h	\/^typedef void GLvoid;$\/;"	t$/;"	t	file:
NOMINMAX	.\GL\freeglut_std.h	61;"	d
PFNGLADDSWAPHINTRECTWINPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLADDSWAPHINTRECTWINPROC)  (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLADDSWAPHINTRECTWINPROC	.\tags	/^PFNGLADDSWAPHINTRECTWINPROC	.\\GL\\GL.h	\/^typedef void (APIENTRY * PFNGLADDSWAPHINTRECTWINPROC)  (GLint x, GLint y, GLsizei width, GLsizei height);$\/;"	t$/;"	t	file:
PFNGLARRAYELEMENTARRAYEXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLARRAYELEMENTARRAYEXTPROC)(GLenum mode, GLsizei count, const GLvoid* pi);$/;"	t
PFNGLARRAYELEMENTARRAYEXTPROC	.\tags	/^PFNGLARRAYELEMENTARRAYEXTPROC	.\\GL\\GL.h	\/^typedef void (APIENTRY * PFNGLARRAYELEMENTARRAYEXTPROC)(GLenum mode, GLsizei count, const GLvoid* pi);$\/;"	t$/;"	t	file:
PFNGLARRAYELEMENTEXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t
PFNGLCOLORPOINTEREXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLCOLORSUBTABLEEXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLCOLORSUBTABLEEXTPROC)$/;"	t
PFNGLCOLORTABLEEXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLCOLORTABLEEXTPROC)$/;"	t
PFNGLDRAWARRAYSEXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWARRAYSEXTPROC	.\tags	/^PFNGLDRAWARRAYSEXTPROC	.\\GL\\GL.h	\/^typedef void (APIENTRY * PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$\/;"	t$/;"	t	file:
PFNGLDRAWRANGEELEMENTSWINPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLDRAWRANGEELEMENTSWINPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	.\tags	/^PFNGLEDGEFLAGPOINTEREXTPROC	.\\GL\\GL.h	\/^typedef void (APIENTRY * PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);$\/;"	t$/;"	t	file:
PFNGLGETCOLORTABLEEXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLGETCOLORTABLEEXTPROC)$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)$/;"	t
PFNGLGETPOINTERVEXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);$/;"	t
PFNGLINDEXPOINTEREXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLINDEXPOINTEREXTPROC	.\tags	/^PFNGLINDEXPOINTEREXTPROC	.\\GL\\GL.h	\/^typedef void (APIENTRY * PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$\/;"	t$/;"	t	file:
PFNGLNORMALPOINTEREXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLNORMALPOINTEREXTPROC	.\tags	/^PFNGLNORMALPOINTEREXTPROC	.\\GL\\GL.h	\/^typedef void (APIENTRY * PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$\/;"	t$/;"	t	file:
PFNGLTEXCOORDPOINTEREXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLVERTEXPOINTEREXTPROC	.\GL\GL.h	/^typedef void (APIENTRY * PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
WIN32_LEAN_AND_MEAN	.\GL\freeglut_std.h	58;"	d
__FREEGLUT_EXT_H__	.\GL\freeglut_ext.h	2;"	d
__FREEGLUT_H__	.\GL\freeglut.h	2;"	d
__FREEGLUT_STD_H__	.\GL\freeglut_std.h	2;"	d
__GLUT_H__	.\GL\glut.h	2;"	d
__GLU_H__	.\GL\GLU.h	20;"	d
__GL_H__	.\GL\GL.h	20;"	d
__gl_h_	.\GL\GL.h	19;"	d
__glu_h__	.\GL\GLU.h	19;"	d
__glutCreateMenuWithExit	.\GL\freeglut_std.h	/^FGAPI int FGAPIENTRY __glutCreateMenuWithExit(void (* func)(int), void (__cdecl *exitfunc)(int));$/;"	p	signature:(void (* func)(int), void (__cdecl *exitfunc)(int))
__glutCreateWindowWithExit	.\GL\freeglut_std.h	/^FGAPI int FGAPIENTRY __glutCreateWindowWithExit(const char *title, void (__cdecl *exitfunc)(int));$/;"	p	signature:(const char *title, void (__cdecl *exitfunc)(int))
__glutCreateWindowWithExit	.\tags	/^__glutCreateWindowWithExit	.\\GL\\freeglut_std.h	\/^FGAPI int FGAPIENTRY __glutCreateWindowWithExit(const char *title, void (__cdecl *exitfunc)(int));$\/;"	p	signature:(const char *title, void (__cdecl *exitfunc)(int))$/;"	p	file:	signature:(const char *title, void (__cdecl *exitfunc)(int))
__glutInitWithExit	.\GL\freeglut_std.h	/^FGAPI void FGAPIENTRY __glutInitWithExit(int *argcp, char **argv, void (__cdecl *exitfunc)(int));$/;"	p	signature:(int *argcp, char **argv, void (__cdecl *exitfunc)(int))
format	.\tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
glAccum	.\GL\GL.h	/^WINGDIAPI void APIENTRY glAccum (GLenum op, GLfloat value);$/;"	p	signature:(GLenum op, GLfloat value)
glAlphaFunc	.\GL\GL.h	/^WINGDIAPI void APIENTRY glAlphaFunc (GLenum func, GLclampf ref);$/;"	p	signature:(GLenum func, GLclampf ref)
glAlphaFunc	.\tags	/^glAlphaFunc	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glAlphaFunc (GLenum func, GLclampf ref);$\/;"	p	signature:(GLenum func, GLclampf ref)$/;"	p	file:	signature:(GLenum func, GLclampf ref)
glAreTexturesResident	.\GL\GL.h	/^WINGDIAPI GLboolean APIENTRY glAreTexturesResident (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	p	signature:(GLsizei n, const GLuint *textures, GLboolean *residences)
glArrayElement	.\GL\GL.h	/^WINGDIAPI void APIENTRY glArrayElement (GLint i);$/;"	p	signature:(GLint i)
glArrayElement	.\tags	/^glArrayElement	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glArrayElement (GLint i);$\/;"	p	signature:(GLint i)$/;"	p	file:	signature:(GLint i)
glBegin	.\GL\GL.h	/^WINGDIAPI void APIENTRY glBegin (GLenum mode);$/;"	p	signature:(GLenum mode)
glBindTexture	.\GL\GL.h	/^WINGDIAPI void APIENTRY glBindTexture (GLenum target, GLuint texture);$/;"	p	signature:(GLenum target, GLuint texture)
glBindTexture	.\tags	/^glBindTexture	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glBindTexture (GLenum target, GLuint texture);$\/;"	p	signature:(GLenum target, GLuint texture)$/;"	p	file:	signature:(GLenum target, GLuint texture)
glBitmap	.\GL\GL.h	/^WINGDIAPI void APIENTRY glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);$/;"	p	signature:(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap)
glBlendFunc	.\GL\GL.h	/^WINGDIAPI void APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);$/;"	p	signature:(GLenum sfactor, GLenum dfactor)
glBlendFunc	.\tags	/^glBlendFunc	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);$\/;"	p	signature:(GLenum sfactor, GLenum dfactor)$/;"	p	file:	signature:(GLenum sfactor, GLenum dfactor)
glCallList	.\GL\GL.h	/^WINGDIAPI void APIENTRY glCallList (GLuint list);$/;"	p	signature:(GLuint list)
glCallLists	.\GL\GL.h	/^WINGDIAPI void APIENTRY glCallLists (GLsizei n, GLenum type, const GLvoid *lists);$/;"	p	signature:(GLsizei n, GLenum type, const GLvoid *lists)
glCallLists	.\tags	/^glCallLists	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glCallLists (GLsizei n, GLenum type, const GLvoid *lists);$\/;"	p	signature:(GLsizei n, GLenum type, const GLvoid *lists)$/;"	p	file:	signature:(GLsizei n, GLenum type, const GLvoid *lists)
glClear	.\GL\GL.h	/^WINGDIAPI void APIENTRY glClear (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glClearAccum	.\GL\GL.h	/^WINGDIAPI void APIENTRY glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
glClearAccum	.\tags	/^glClearAccum	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$\/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)$/;"	p	file:	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
glClearColor	.\GL\GL.h	/^WINGDIAPI void APIENTRY glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	p	signature:(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
glClearDepth	.\GL\GL.h	/^WINGDIAPI void APIENTRY glClearDepth (GLclampd depth);$/;"	p	signature:(GLclampd depth)
glClearDepth	.\tags	/^glClearDepth	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glClearDepth (GLclampd depth);$\/;"	p	signature:(GLclampd depth)$/;"	p	file:	signature:(GLclampd depth)
glClearIndex	.\GL\GL.h	/^WINGDIAPI void APIENTRY glClearIndex (GLfloat c);$/;"	p	signature:(GLfloat c)
glClearStencil	.\GL\GL.h	/^WINGDIAPI void APIENTRY glClearStencil (GLint s);$/;"	p	signature:(GLint s)
glClearStencil	.\tags	/^glClearStencil	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glClearStencil (GLint s);$\/;"	p	signature:(GLint s)$/;"	p	file:	signature:(GLint s)
glClipPlane	.\GL\GL.h	/^WINGDIAPI void APIENTRY glClipPlane (GLenum plane, const GLdouble *equation);$/;"	p	signature:(GLenum plane, const GLdouble *equation)
glColor3b	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3b (GLbyte red, GLbyte green, GLbyte blue);$/;"	p	signature:(GLbyte red, GLbyte green, GLbyte blue)
glColor3b	.\tags	/^glColor3b	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor3b (GLbyte red, GLbyte green, GLbyte blue);$\/;"	p	signature:(GLbyte red, GLbyte green, GLbyte blue)$/;"	p	file:	signature:(GLbyte red, GLbyte green, GLbyte blue)
glColor3bv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3bv (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glColor3d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3d (GLdouble red, GLdouble green, GLdouble blue);$/;"	p	signature:(GLdouble red, GLdouble green, GLdouble blue)
glColor3d	.\tags	/^glColor3d	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor3d (GLdouble red, GLdouble green, GLdouble blue);$\/;"	p	signature:(GLdouble red, GLdouble green, GLdouble blue)$/;"	p	file:	signature:(GLdouble red, GLdouble green, GLdouble blue)
glColor3dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glColor3f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3f (GLfloat red, GLfloat green, GLfloat blue);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue)
glColor3f	.\tags	/^glColor3f	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor3f (GLfloat red, GLfloat green, GLfloat blue);$\/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue)$/;"	p	file:	signature:(GLfloat red, GLfloat green, GLfloat blue)
glColor3fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glColor3i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3i (GLint red, GLint green, GLint blue);$/;"	p	signature:(GLint red, GLint green, GLint blue)
glColor3i	.\tags	/^glColor3i	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor3i (GLint red, GLint green, GLint blue);$\/;"	p	signature:(GLint red, GLint green, GLint blue)$/;"	p	file:	signature:(GLint red, GLint green, GLint blue)
glColor3iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glColor3s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3s (GLshort red, GLshort green, GLshort blue);$/;"	p	signature:(GLshort red, GLshort green, GLshort blue)
glColor3s	.\tags	/^glColor3s	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor3s (GLshort red, GLshort green, GLshort blue);$\/;"	p	signature:(GLshort red, GLshort green, GLshort blue)$/;"	p	file:	signature:(GLshort red, GLshort green, GLshort blue)
glColor3sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glColor3ub	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3ub (GLubyte red, GLubyte green, GLubyte blue);$/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue)
glColor3ub	.\tags	/^glColor3ub	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor3ub (GLubyte red, GLubyte green, GLubyte blue);$\/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue)$/;"	p	file:	signature:(GLubyte red, GLubyte green, GLubyte blue)
glColor3ubv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3ubv (const GLubyte *v);$/;"	p	signature:(const GLubyte *v)
glColor3ui	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3ui (GLuint red, GLuint green, GLuint blue);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue)
glColor3ui	.\tags	/^glColor3ui	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor3ui (GLuint red, GLuint green, GLuint blue);$\/;"	p	signature:(GLuint red, GLuint green, GLuint blue)$/;"	p	file:	signature:(GLuint red, GLuint green, GLuint blue)
glColor3uiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3uiv (const GLuint *v);$/;"	p	signature:(const GLuint *v)
glColor3us	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3us (GLushort red, GLushort green, GLushort blue);$/;"	p	signature:(GLushort red, GLushort green, GLushort blue)
glColor3us	.\tags	/^glColor3us	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor3us (GLushort red, GLushort green, GLushort blue);$\/;"	p	signature:(GLushort red, GLushort green, GLushort blue)$/;"	p	file:	signature:(GLushort red, GLushort green, GLushort blue)
glColor3usv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor3usv (const GLushort *v);$/;"	p	signature:(const GLushort *v)
glColor4b	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);$/;"	p	signature:(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)
glColor4b	.\tags	/^glColor4b	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);$\/;"	p	signature:(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)$/;"	p	file:	signature:(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)
glColor4bv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4bv (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glColor4d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);$/;"	p	signature:(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)
glColor4d	.\tags	/^glColor4d	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);$\/;"	p	signature:(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)$/;"	p	file:	signature:(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)
glColor4dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glColor4f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
glColor4f	.\tags	/^glColor4f	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$\/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)$/;"	p	file:	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
glColor4fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glColor4i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4i (GLint red, GLint green, GLint blue, GLint alpha);$/;"	p	signature:(GLint red, GLint green, GLint blue, GLint alpha)
glColor4i	.\tags	/^glColor4i	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor4i (GLint red, GLint green, GLint blue, GLint alpha);$\/;"	p	signature:(GLint red, GLint green, GLint blue, GLint alpha)$/;"	p	file:	signature:(GLint red, GLint green, GLint blue, GLint alpha)
glColor4iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glColor4s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);$/;"	p	signature:(GLshort red, GLshort green, GLshort blue, GLshort alpha)
glColor4s	.\tags	/^glColor4s	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);$\/;"	p	signature:(GLshort red, GLshort green, GLshort blue, GLshort alpha)$/;"	p	file:	signature:(GLshort red, GLshort green, GLshort blue, GLshort alpha)
glColor4sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glColor4ub	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);$/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
glColor4ub	.\tags	/^glColor4ub	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);$\/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)$/;"	p	file:	signature:(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
glColor4ubv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4ubv (const GLubyte *v);$/;"	p	signature:(const GLubyte *v)
glColor4ui	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue, GLuint alpha)
glColor4ui	.\tags	/^glColor4ui	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);$\/;"	p	signature:(GLuint red, GLuint green, GLuint blue, GLuint alpha)$/;"	p	file:	signature:(GLuint red, GLuint green, GLuint blue, GLuint alpha)
glColor4uiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4uiv (const GLuint *v);$/;"	p	signature:(const GLuint *v)
glColor4us	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);$/;"	p	signature:(GLushort red, GLushort green, GLushort blue, GLushort alpha)
glColor4us	.\tags	/^glColor4us	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);$\/;"	p	signature:(GLushort red, GLushort green, GLushort blue, GLushort alpha)$/;"	p	file:	signature:(GLushort red, GLushort green, GLushort blue, GLushort alpha)
glColor4usv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColor4usv (const GLushort *v);$/;"	p	signature:(const GLushort *v)
glColorMask	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	p	signature:(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
glColorMask	.\tags	/^glColorMask	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$\/;"	p	signature:(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)$/;"	p	file:	signature:(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
glColorMaterial	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColorMaterial (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glColorPointer	.\GL\GL.h	/^WINGDIAPI void APIENTRY glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glColorPointer	.\tags	/^glColorPointer	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$\/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	p	file:	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glCopyPixels	.\GL\GL.h	/^WINGDIAPI void APIENTRY glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type)
glCopyTexImage1D	.\GL\GL.h	/^WINGDIAPI void APIENTRY glCopyTexImage1D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p	signature:(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border)
glCopyTexImage1D	.\tags	/^glCopyTexImage1D	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glCopyTexImage1D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);$\/;"	p	signature:(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border)$/;"	p	file:	signature:(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border)
glCopyTexImage2D	.\GL\GL.h	/^WINGDIAPI void APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyTexSubImage1D	.\GL\GL.h	/^WINGDIAPI void APIENTRY glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyTexSubImage1D	.\tags	/^glCopyTexSubImage1D	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$\/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)$/;"	p	file:	signature:(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyTexSubImage2D	.\GL\GL.h	/^WINGDIAPI void APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCullFace	.\GL\GL.h	/^WINGDIAPI void APIENTRY glCullFace (GLenum mode);$/;"	p	signature:(GLenum mode)
glCullFace	.\tags	/^glCullFace	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glCullFace (GLenum mode);$\/;"	p	signature:(GLenum mode)$/;"	p	file:	signature:(GLenum mode)
glDeleteLists	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDeleteLists (GLuint list, GLsizei range);$/;"	p	signature:(GLuint list, GLsizei range)
glDeleteTextures	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDeleteTextures (GLsizei n, const GLuint *textures);$/;"	p	signature:(GLsizei n, const GLuint *textures)
glDeleteTextures	.\tags	/^glDeleteTextures	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glDeleteTextures (GLsizei n, const GLuint *textures);$\/;"	p	signature:(GLsizei n, const GLuint *textures)$/;"	p	file:	signature:(GLsizei n, const GLuint *textures)
glDepthFunc	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDepthFunc (GLenum func);$/;"	p	signature:(GLenum func)
glDepthMask	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDepthMask (GLboolean flag);$/;"	p	signature:(GLboolean flag)
glDepthMask	.\tags	/^glDepthMask	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glDepthMask (GLboolean flag);$\/;"	p	signature:(GLboolean flag)$/;"	p	file:	signature:(GLboolean flag)
glDepthRange	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDepthRange (GLclampd zNear, GLclampd zFar);$/;"	p	signature:(GLclampd zNear, GLclampd zFar)
glDisable	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDisable (GLenum cap);$/;"	p	signature:(GLenum cap)
glDisable	.\tags	/^glDisable	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glDisable (GLenum cap);$\/;"	p	signature:(GLenum cap)$/;"	p	file:	signature:(GLenum cap)
glDisableClientState	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDisableClientState (GLenum array);$/;"	p	signature:(GLenum array)
glDrawArrays	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count)
glDrawArrays	.\tags	/^glDrawArrays	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);$\/;"	p	signature:(GLenum mode, GLint first, GLsizei count)$/;"	p	file:	signature:(GLenum mode, GLint first, GLsizei count)
glDrawBuffer	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDrawBuffer (GLenum mode);$/;"	p	signature:(GLenum mode)
glDrawElements	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)
glDrawElements	.\tags	/^glDrawElements	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);$\/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)$/;"	p	file:	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)
glDrawPixels	.\GL\GL.h	/^WINGDIAPI void APIENTRY glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
glEdgeFlag	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEdgeFlag (GLboolean flag);$/;"	p	signature:(GLboolean flag)
glEdgeFlag	.\tags	/^glEdgeFlag	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glEdgeFlag (GLboolean flag);$\/;"	p	signature:(GLboolean flag)$/;"	p	file:	signature:(GLboolean flag)
glEdgeFlagPointer	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEdgeFlagPointer (GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLsizei stride, const GLvoid *pointer)
glEdgeFlagv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEdgeFlagv (const GLboolean *flag);$/;"	p	signature:(const GLboolean *flag)
glEdgeFlagv	.\tags	/^glEdgeFlagv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glEdgeFlagv (const GLboolean *flag);$\/;"	p	signature:(const GLboolean *flag)$/;"	p	file:	signature:(const GLboolean *flag)
glEnable	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEnable (GLenum cap);$/;"	p	signature:(GLenum cap)
glEnableClientState	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEnableClientState (GLenum array);$/;"	p	signature:(GLenum array)
glEnableClientState	.\tags	/^glEnableClientState	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glEnableClientState (GLenum array);$\/;"	p	signature:(GLenum array)$/;"	p	file:	signature:(GLenum array)
glEnd	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEnd (void);$/;"	p	signature:(void)
glEndList	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEndList (void);$/;"	p	signature:(void)
glEndList	.\tags	/^glEndList	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glEndList (void);$\/;"	p	signature:(void)$/;"	p	file:	signature:(void)
glEvalCoord1d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalCoord1d (GLdouble u);$/;"	p	signature:(GLdouble u)
glEvalCoord1dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalCoord1dv (const GLdouble *u);$/;"	p	signature:(const GLdouble *u)
glEvalCoord1dv	.\tags	/^glEvalCoord1dv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glEvalCoord1dv (const GLdouble *u);$\/;"	p	signature:(const GLdouble *u)$/;"	p	file:	signature:(const GLdouble *u)
glEvalCoord1f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalCoord1f (GLfloat u);$/;"	p	signature:(GLfloat u)
glEvalCoord1fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalCoord1fv (const GLfloat *u);$/;"	p	signature:(const GLfloat *u)
glEvalCoord1fv	.\tags	/^glEvalCoord1fv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glEvalCoord1fv (const GLfloat *u);$\/;"	p	signature:(const GLfloat *u)$/;"	p	file:	signature:(const GLfloat *u)
glEvalCoord2d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalCoord2d (GLdouble u, GLdouble v);$/;"	p	signature:(GLdouble u, GLdouble v)
glEvalCoord2dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalCoord2dv (const GLdouble *u);$/;"	p	signature:(const GLdouble *u)
glEvalCoord2dv	.\tags	/^glEvalCoord2dv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glEvalCoord2dv (const GLdouble *u);$\/;"	p	signature:(const GLdouble *u)$/;"	p	file:	signature:(const GLdouble *u)
glEvalCoord2f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalCoord2f (GLfloat u, GLfloat v);$/;"	p	signature:(GLfloat u, GLfloat v)
glEvalCoord2fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalCoord2fv (const GLfloat *u);$/;"	p	signature:(const GLfloat *u)
glEvalCoord2fv	.\tags	/^glEvalCoord2fv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glEvalCoord2fv (const GLfloat *u);$\/;"	p	signature:(const GLfloat *u)$/;"	p	file:	signature:(const GLfloat *u)
glEvalMesh1	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalMesh1 (GLenum mode, GLint i1, GLint i2);$/;"	p	signature:(GLenum mode, GLint i1, GLint i2)
glEvalMesh2	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);$/;"	p	signature:(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)
glEvalMesh2	.\tags	/^glEvalMesh2	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);$\/;"	p	signature:(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)$/;"	p	file:	signature:(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)
glEvalPoint1	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalPoint1 (GLint i);$/;"	p	signature:(GLint i)
glEvalPoint2	.\GL\GL.h	/^WINGDIAPI void APIENTRY glEvalPoint2 (GLint i, GLint j);$/;"	p	signature:(GLint i, GLint j)
glEvalPoint2	.\tags	/^glEvalPoint2	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glEvalPoint2 (GLint i, GLint j);$\/;"	p	signature:(GLint i, GLint j)$/;"	p	file:	signature:(GLint i, GLint j)
glFeedbackBuffer	.\GL\GL.h	/^WINGDIAPI void APIENTRY glFeedbackBuffer (GLsizei size, GLenum type, GLfloat *buffer);$/;"	p	signature:(GLsizei size, GLenum type, GLfloat *buffer)
glFinish	.\GL\GL.h	/^WINGDIAPI void APIENTRY glFinish (void);$/;"	p	signature:(void)
glFinish	.\tags	/^glFinish	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glFinish (void);$\/;"	p	signature:(void)$/;"	p	file:	signature:(void)
glFlush	.\GL\GL.h	/^WINGDIAPI void APIENTRY glFlush (void);$/;"	p	signature:(void)
glFogf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glFogf (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glFogf	.\tags	/^glFogf	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glFogf (GLenum pname, GLfloat param);$\/;"	p	signature:(GLenum pname, GLfloat param)$/;"	p	file:	signature:(GLenum pname, GLfloat param)
glFogfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glFogfv (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glFogi	.\GL\GL.h	/^WINGDIAPI void APIENTRY glFogi (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glFogi	.\tags	/^glFogi	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glFogi (GLenum pname, GLint param);$\/;"	p	signature:(GLenum pname, GLint param)$/;"	p	file:	signature:(GLenum pname, GLint param)
glFogiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glFogiv (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glFrontFace	.\GL\GL.h	/^WINGDIAPI void APIENTRY glFrontFace (GLenum mode);$/;"	p	signature:(GLenum mode)
glFrontFace	.\tags	/^glFrontFace	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glFrontFace (GLenum mode);$\/;"	p	signature:(GLenum mode)$/;"	p	file:	signature:(GLenum mode)
glFrustum	.\GL\GL.h	/^WINGDIAPI void APIENTRY glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
glGenLists	.\GL\GL.h	/^WINGDIAPI GLuint APIENTRY glGenLists (GLsizei range);$/;"	p	signature:(GLsizei range)
glGenLists	.\tags	/^glGenLists	.\\GL\\GL.h	\/^WINGDIAPI GLuint APIENTRY glGenLists (GLsizei range);$\/;"	p	signature:(GLsizei range)$/;"	p	file:	signature:(GLsizei range)
glGenTextures	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGenTextures (GLsizei n, GLuint *textures);$/;"	p	signature:(GLsizei n, GLuint *textures)
glGetBooleanv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetBooleanv (GLenum pname, GLboolean *params);$/;"	p	signature:(GLenum pname, GLboolean *params)
glGetBooleanv	.\tags	/^glGetBooleanv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetBooleanv (GLenum pname, GLboolean *params);$\/;"	p	signature:(GLenum pname, GLboolean *params)$/;"	p	file:	signature:(GLenum pname, GLboolean *params)
glGetClipPlane	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetClipPlane (GLenum plane, GLdouble *equation);$/;"	p	signature:(GLenum plane, GLdouble *equation)
glGetDoublev	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetDoublev (GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum pname, GLdouble *params)
glGetDoublev	.\tags	/^glGetDoublev	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetDoublev (GLenum pname, GLdouble *params);$\/;"	p	signature:(GLenum pname, GLdouble *params)$/;"	p	file:	signature:(GLenum pname, GLdouble *params)
glGetError	.\GL\GL.h	/^WINGDIAPI GLenum APIENTRY glGetError (void);$/;"	p	signature:(void)
glGetFloatv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetFloatv (GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum pname, GLfloat *params)
glGetFloatv	.\tags	/^glGetFloatv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetFloatv (GLenum pname, GLfloat *params);$\/;"	p	signature:(GLenum pname, GLfloat *params)$/;"	p	file:	signature:(GLenum pname, GLfloat *params)
glGetIntegerv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetIntegerv (GLenum pname, GLint *params);$/;"	p	signature:(GLenum pname, GLint *params)
glGetLightfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetLightfv (GLenum light, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum light, GLenum pname, GLfloat *params)
glGetLightfv	.\tags	/^glGetLightfv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetLightfv (GLenum light, GLenum pname, GLfloat *params);$\/;"	p	signature:(GLenum light, GLenum pname, GLfloat *params)$/;"	p	file:	signature:(GLenum light, GLenum pname, GLfloat *params)
glGetLightiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetLightiv (GLenum light, GLenum pname, GLint *params);$/;"	p	signature:(GLenum light, GLenum pname, GLint *params)
glGetMapdv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetMapdv (GLenum target, GLenum query, GLdouble *v);$/;"	p	signature:(GLenum target, GLenum query, GLdouble *v)
glGetMapdv	.\tags	/^glGetMapdv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetMapdv (GLenum target, GLenum query, GLdouble *v);$\/;"	p	signature:(GLenum target, GLenum query, GLdouble *v)$/;"	p	file:	signature:(GLenum target, GLenum query, GLdouble *v)
glGetMapfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetMapfv (GLenum target, GLenum query, GLfloat *v);$/;"	p	signature:(GLenum target, GLenum query, GLfloat *v)
glGetMapiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetMapiv (GLenum target, GLenum query, GLint *v);$/;"	p	signature:(GLenum target, GLenum query, GLint *v)
glGetMapiv	.\tags	/^glGetMapiv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetMapiv (GLenum target, GLenum query, GLint *v);$\/;"	p	signature:(GLenum target, GLenum query, GLint *v)$/;"	p	file:	signature:(GLenum target, GLenum query, GLint *v)
glGetMaterialfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum face, GLenum pname, GLfloat *params)
glGetMaterialiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetMaterialiv (GLenum face, GLenum pname, GLint *params);$/;"	p	signature:(GLenum face, GLenum pname, GLint *params)
glGetMaterialiv	.\tags	/^glGetMaterialiv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetMaterialiv (GLenum face, GLenum pname, GLint *params);$\/;"	p	signature:(GLenum face, GLenum pname, GLint *params)$/;"	p	file:	signature:(GLenum face, GLenum pname, GLint *params)
glGetPixelMapfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetPixelMapfv (GLenum map, GLfloat *values);$/;"	p	signature:(GLenum map, GLfloat *values)
glGetPixelMapuiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetPixelMapuiv (GLenum map, GLuint *values);$/;"	p	signature:(GLenum map, GLuint *values)
glGetPixelMapuiv	.\tags	/^glGetPixelMapuiv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetPixelMapuiv (GLenum map, GLuint *values);$\/;"	p	signature:(GLenum map, GLuint *values)$/;"	p	file:	signature:(GLenum map, GLuint *values)
glGetPixelMapusv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetPixelMapusv (GLenum map, GLushort *values);$/;"	p	signature:(GLenum map, GLushort *values)
glGetPointerv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetPointerv (GLenum pname, GLvoid* *params);$/;"	p	signature:(GLenum pname, GLvoid* *params)
glGetPointerv	.\tags	/^glGetPointerv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetPointerv (GLenum pname, GLvoid* *params);$\/;"	p	signature:(GLenum pname, GLvoid* *params)$/;"	p	file:	signature:(GLenum pname, GLvoid* *params)
glGetPolygonStipple	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetPolygonStipple (GLubyte *mask);$/;"	p	signature:(GLubyte *mask)
glGetString	.\GL\GL.h	/^WINGDIAPI const GLubyte * APIENTRY glGetString (GLenum name);$/;"	p	signature:(GLenum name)
glGetString	.\tags	/^glGetString	.\\GL\\GL.h	\/^WINGDIAPI const GLubyte * APIENTRY glGetString (GLenum name);$\/;"	p	signature:(GLenum name)$/;"	p	file:	signature:(GLenum name)
glGetTexEnvfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetTexEnvfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetTexEnviv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetTexEnviv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetTexEnviv	.\tags	/^glGetTexEnviv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetTexEnviv (GLenum target, GLenum pname, GLint *params);$\/;"	p	signature:(GLenum target, GLenum pname, GLint *params)$/;"	p	file:	signature:(GLenum target, GLenum pname, GLint *params)
glGetTexGendv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetTexGendv (GLenum coord, GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum coord, GLenum pname, GLdouble *params)
glGetTexGenfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetTexGenfv (GLenum coord, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum coord, GLenum pname, GLfloat *params)
glGetTexGenfv	.\tags	/^glGetTexGenfv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetTexGenfv (GLenum coord, GLenum pname, GLfloat *params);$\/;"	p	signature:(GLenum coord, GLenum pname, GLfloat *params)$/;"	p	file:	signature:(GLenum coord, GLenum pname, GLfloat *params)
glGetTexGeniv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetTexGeniv (GLenum coord, GLenum pname, GLint *params);$/;"	p	signature:(GLenum coord, GLenum pname, GLint *params)
glGetTexImage	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
glGetTexImage	.\tags	/^glGetTexImage	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$\/;"	p	signature:(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)$/;"	p	file:	signature:(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
glGetTexLevelParameterfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLint level, GLenum pname, GLfloat *params)
glGetTexLevelParameteriv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLint level, GLenum pname, GLint *params)
glGetTexLevelParameteriv	.\tags	/^glGetTexLevelParameteriv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);$\/;"	p	signature:(GLenum target, GLint level, GLenum pname, GLint *params)$/;"	p	file:	signature:(GLenum target, GLint level, GLenum pname, GLint *params)
glGetTexParameterfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetTexParameteriv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetTexParameteriv	.\tags	/^glGetTexParameteriv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);$\/;"	p	signature:(GLenum target, GLenum pname, GLint *params)$/;"	p	file:	signature:(GLenum target, GLenum pname, GLint *params)
glHint	.\GL\GL.h	/^WINGDIAPI void APIENTRY glHint (GLenum target, GLenum mode);$/;"	p	signature:(GLenum target, GLenum mode)
glIndexMask	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexMask (GLuint mask);$/;"	p	signature:(GLuint mask)
glIndexMask	.\tags	/^glIndexMask	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glIndexMask (GLuint mask);$\/;"	p	signature:(GLuint mask)$/;"	p	file:	signature:(GLuint mask)
glIndexPointer	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexPointer (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glIndexd	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexd (GLdouble c);$/;"	p	signature:(GLdouble c)
glIndexd	.\tags	/^glIndexd	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glIndexd (GLdouble c);$\/;"	p	signature:(GLdouble c)$/;"	p	file:	signature:(GLdouble c)
glIndexdv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexdv (const GLdouble *c);$/;"	p	signature:(const GLdouble *c)
glIndexf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexf (GLfloat c);$/;"	p	signature:(GLfloat c)
glIndexf	.\tags	/^glIndexf	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glIndexf (GLfloat c);$\/;"	p	signature:(GLfloat c)$/;"	p	file:	signature:(GLfloat c)
glIndexfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexfv (const GLfloat *c);$/;"	p	signature:(const GLfloat *c)
glIndexi	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexi (GLint c);$/;"	p	signature:(GLint c)
glIndexi	.\tags	/^glIndexi	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glIndexi (GLint c);$\/;"	p	signature:(GLint c)$/;"	p	file:	signature:(GLint c)
glIndexiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexiv (const GLint *c);$/;"	p	signature:(const GLint *c)
glIndexs	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexs (GLshort c);$/;"	p	signature:(GLshort c)
glIndexs	.\tags	/^glIndexs	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glIndexs (GLshort c);$\/;"	p	signature:(GLshort c)$/;"	p	file:	signature:(GLshort c)
glIndexsv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexsv (const GLshort *c);$/;"	p	signature:(const GLshort *c)
glIndexub	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexub (GLubyte c);$/;"	p	signature:(GLubyte c)
glIndexub	.\tags	/^glIndexub	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glIndexub (GLubyte c);$\/;"	p	signature:(GLubyte c)$/;"	p	file:	signature:(GLubyte c)
glIndexubv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glIndexubv (const GLubyte *c);$/;"	p	signature:(const GLubyte *c)
glInitNames	.\GL\GL.h	/^WINGDIAPI void APIENTRY glInitNames (void);$/;"	p	signature:(void)
glInitNames	.\tags	/^glInitNames	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glInitNames (void);$\/;"	p	signature:(void)$/;"	p	file:	signature:(void)
glInterleavedArrays	.\GL\GL.h	/^WINGDIAPI void APIENTRY glInterleavedArrays (GLenum format, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum format, GLsizei stride, const GLvoid *pointer)
glIsEnabled	.\GL\GL.h	/^WINGDIAPI GLboolean APIENTRY glIsEnabled (GLenum cap);$/;"	p	signature:(GLenum cap)
glIsEnabled	.\tags	/^glIsEnabled	.\\GL\\GL.h	\/^WINGDIAPI GLboolean APIENTRY glIsEnabled (GLenum cap);$\/;"	p	signature:(GLenum cap)$/;"	p	file:	signature:(GLenum cap)
glIsList	.\GL\GL.h	/^WINGDIAPI GLboolean APIENTRY glIsList (GLuint list);$/;"	p	signature:(GLuint list)
glIsTexture	.\GL\GL.h	/^WINGDIAPI GLboolean APIENTRY glIsTexture (GLuint texture);$/;"	p	signature:(GLuint texture)
glIsTexture	.\tags	/^glIsTexture	.\\GL\\GL.h	\/^WINGDIAPI GLboolean APIENTRY glIsTexture (GLuint texture);$\/;"	p	signature:(GLuint texture)$/;"	p	file:	signature:(GLuint texture)
glLightModelf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLightModelf (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glLightModelfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLightModelfv (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glLightModelfv	.\tags	/^glLightModelfv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glLightModelfv (GLenum pname, const GLfloat *params);$\/;"	p	signature:(GLenum pname, const GLfloat *params)$/;"	p	file:	signature:(GLenum pname, const GLfloat *params)
glLightModeli	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLightModeli (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glLightModeliv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLightModeliv (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glLightModeliv	.\tags	/^glLightModeliv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glLightModeliv (GLenum pname, const GLint *params);$\/;"	p	signature:(GLenum pname, const GLint *params)$/;"	p	file:	signature:(GLenum pname, const GLint *params)
glLightf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLightf (GLenum light, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum light, GLenum pname, GLfloat param)
glLightfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLightfv (GLenum light, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLfloat *params)
glLightfv	.\tags	/^glLightfv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glLightfv (GLenum light, GLenum pname, const GLfloat *params);$\/;"	p	signature:(GLenum light, GLenum pname, const GLfloat *params)$/;"	p	file:	signature:(GLenum light, GLenum pname, const GLfloat *params)
glLighti	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLighti (GLenum light, GLenum pname, GLint param);$/;"	p	signature:(GLenum light, GLenum pname, GLint param)
glLightiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLightiv (GLenum light, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLint *params)
glLightiv	.\tags	/^glLightiv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glLightiv (GLenum light, GLenum pname, const GLint *params);$\/;"	p	signature:(GLenum light, GLenum pname, const GLint *params)$/;"	p	file:	signature:(GLenum light, GLenum pname, const GLint *params)
glLineStipple	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLineStipple (GLint factor, GLushort pattern);$/;"	p	signature:(GLint factor, GLushort pattern)
glLineWidth	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLineWidth (GLfloat width);$/;"	p	signature:(GLfloat width)
glLineWidth	.\tags	/^glLineWidth	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glLineWidth (GLfloat width);$\/;"	p	signature:(GLfloat width)$/;"	p	file:	signature:(GLfloat width)
glListBase	.\GL\GL.h	/^WINGDIAPI void APIENTRY glListBase (GLuint base);$/;"	p	signature:(GLuint base)
glLoadIdentity	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLoadIdentity (void);$/;"	p	signature:(void)
glLoadIdentity	.\tags	/^glLoadIdentity	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glLoadIdentity (void);$\/;"	p	signature:(void)$/;"	p	file:	signature:(void)
glLoadMatrixd	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLoadMatrixd (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glLoadMatrixf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLoadMatrixf (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glLoadMatrixf	.\tags	/^glLoadMatrixf	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glLoadMatrixf (const GLfloat *m);$\/;"	p	signature:(const GLfloat *m)$/;"	p	file:	signature:(const GLfloat *m)
glLoadName	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLoadName (GLuint name);$/;"	p	signature:(GLuint name)
glLogicOp	.\GL\GL.h	/^WINGDIAPI void APIENTRY glLogicOp (GLenum opcode);$/;"	p	signature:(GLenum opcode)
glLogicOp	.\tags	/^glLogicOp	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glLogicOp (GLenum opcode);$\/;"	p	signature:(GLenum opcode)$/;"	p	file:	signature:(GLenum opcode)
glMap1d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);$/;"	p	signature:(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)
glMap1f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)
glMap1f	.\tags	/^glMap1f	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);$\/;"	p	signature:(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)$/;"	p	file:	signature:(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)
glMap2d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);$/;"	p	signature:(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)
glMap2f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)
glMap2f	.\tags	/^glMap2f	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);$\/;"	p	signature:(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)$/;"	p	file:	signature:(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)
glMapGrid1d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);$/;"	p	signature:(GLint un, GLdouble u1, GLdouble u2)
glMapGrid1f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);$/;"	p	signature:(GLint un, GLfloat u1, GLfloat u2)
glMapGrid1f	.\tags	/^glMapGrid1f	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);$\/;"	p	signature:(GLint un, GLfloat u1, GLfloat u2)$/;"	p	file:	signature:(GLint un, GLfloat u1, GLfloat u2)
glMapGrid2d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);$/;"	p	signature:(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)
glMapGrid2f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)
glMapGrid2f	.\tags	/^glMapGrid2f	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);$\/;"	p	signature:(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)$/;"	p	file:	signature:(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)
glMaterialf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMaterialf (GLenum face, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum face, GLenum pname, GLfloat param)
glMaterialfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMaterialfv (GLenum face, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLfloat *params)
glMaterialfv	.\tags	/^glMaterialfv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glMaterialfv (GLenum face, GLenum pname, const GLfloat *params);$\/;"	p	signature:(GLenum face, GLenum pname, const GLfloat *params)$/;"	p	file:	signature:(GLenum face, GLenum pname, const GLfloat *params)
glMateriali	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMateriali (GLenum face, GLenum pname, GLint param);$/;"	p	signature:(GLenum face, GLenum pname, GLint param)
glMaterialiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMaterialiv (GLenum face, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLint *params)
glMaterialiv	.\tags	/^glMaterialiv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glMaterialiv (GLenum face, GLenum pname, const GLint *params);$\/;"	p	signature:(GLenum face, GLenum pname, const GLint *params)$/;"	p	file:	signature:(GLenum face, GLenum pname, const GLint *params)
glMatrixMode	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMatrixMode (GLenum mode);$/;"	p	signature:(GLenum mode)
glMultMatrixd	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMultMatrixd (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glMultMatrixd	.\tags	/^glMultMatrixd	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glMultMatrixd (const GLdouble *m);$\/;"	p	signature:(const GLdouble *m)$/;"	p	file:	signature:(const GLdouble *m)
glMultMatrixf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glMultMatrixf (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glNewList	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNewList (GLuint list, GLenum mode);$/;"	p	signature:(GLuint list, GLenum mode)
glNewList	.\tags	/^glNewList	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glNewList (GLuint list, GLenum mode);$\/;"	p	signature:(GLuint list, GLenum mode)$/;"	p	file:	signature:(GLuint list, GLenum mode)
glNormal3b	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz);$/;"	p	signature:(GLbyte nx, GLbyte ny, GLbyte nz)
glNormal3bv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormal3bv (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glNormal3bv	.\tags	/^glNormal3bv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glNormal3bv (const GLbyte *v);$\/;"	p	signature:(const GLbyte *v)$/;"	p	file:	signature:(const GLbyte *v)
glNormal3d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz);$/;"	p	signature:(GLdouble nx, GLdouble ny, GLdouble nz)
glNormal3dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormal3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glNormal3dv	.\tags	/^glNormal3dv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glNormal3dv (const GLdouble *v);$\/;"	p	signature:(const GLdouble *v)$/;"	p	file:	signature:(const GLdouble *v)
glNormal3f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);$/;"	p	signature:(GLfloat nx, GLfloat ny, GLfloat nz)
glNormal3fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormal3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glNormal3fv	.\tags	/^glNormal3fv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glNormal3fv (const GLfloat *v);$\/;"	p	signature:(const GLfloat *v)$/;"	p	file:	signature:(const GLfloat *v)
glNormal3i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormal3i (GLint nx, GLint ny, GLint nz);$/;"	p	signature:(GLint nx, GLint ny, GLint nz)
glNormal3iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormal3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glNormal3iv	.\tags	/^glNormal3iv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glNormal3iv (const GLint *v);$\/;"	p	signature:(const GLint *v)$/;"	p	file:	signature:(const GLint *v)
glNormal3s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormal3s (GLshort nx, GLshort ny, GLshort nz);$/;"	p	signature:(GLshort nx, GLshort ny, GLshort nz)
glNormal3sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormal3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glNormal3sv	.\tags	/^glNormal3sv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glNormal3sv (const GLshort *v);$\/;"	p	signature:(const GLshort *v)$/;"	p	file:	signature:(const GLshort *v)
glNormalPointer	.\GL\GL.h	/^WINGDIAPI void APIENTRY glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glOrtho	.\GL\GL.h	/^WINGDIAPI void APIENTRY glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
glOrtho	.\tags	/^glOrtho	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$\/;"	p	signature:(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)$/;"	p	file:	signature:(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
glPassThrough	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPassThrough (GLfloat token);$/;"	p	signature:(GLfloat token)
glPixelMapfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPixelMapfv (GLenum map, GLsizei mapsize, const GLfloat *values);$/;"	p	signature:(GLenum map, GLsizei mapsize, const GLfloat *values)
glPixelMapfv	.\tags	/^glPixelMapfv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPixelMapfv (GLenum map, GLsizei mapsize, const GLfloat *values);$\/;"	p	signature:(GLenum map, GLsizei mapsize, const GLfloat *values)$/;"	p	file:	signature:(GLenum map, GLsizei mapsize, const GLfloat *values)
glPixelMapuiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPixelMapuiv (GLenum map, GLsizei mapsize, const GLuint *values);$/;"	p	signature:(GLenum map, GLsizei mapsize, const GLuint *values)
glPixelMapusv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPixelMapusv (GLenum map, GLsizei mapsize, const GLushort *values);$/;"	p	signature:(GLenum map, GLsizei mapsize, const GLushort *values)
glPixelMapusv	.\tags	/^glPixelMapusv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPixelMapusv (GLenum map, GLsizei mapsize, const GLushort *values);$\/;"	p	signature:(GLenum map, GLsizei mapsize, const GLushort *values)$/;"	p	file:	signature:(GLenum map, GLsizei mapsize, const GLushort *values)
glPixelStoref	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPixelStoref (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPixelStorei	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPixelStorei (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPixelStorei	.\tags	/^glPixelStorei	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPixelStorei (GLenum pname, GLint param);$\/;"	p	signature:(GLenum pname, GLint param)$/;"	p	file:	signature:(GLenum pname, GLint param)
glPixelTransferf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPixelTransferf (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPixelTransferi	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPixelTransferi (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPixelTransferi	.\tags	/^glPixelTransferi	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPixelTransferi (GLenum pname, GLint param);$\/;"	p	signature:(GLenum pname, GLint param)$/;"	p	file:	signature:(GLenum pname, GLint param)
glPixelZoom	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPixelZoom (GLfloat xfactor, GLfloat yfactor);$/;"	p	signature:(GLfloat xfactor, GLfloat yfactor)
glPointSize	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPointSize (GLfloat size);$/;"	p	signature:(GLfloat size)
glPointSize	.\tags	/^glPointSize	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPointSize (GLfloat size);$\/;"	p	signature:(GLfloat size)$/;"	p	file:	signature:(GLfloat size)
glPolygonMode	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPolygonMode (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glPolygonOffset	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);$/;"	p	signature:(GLfloat factor, GLfloat units)
glPolygonOffset	.\tags	/^glPolygonOffset	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);$\/;"	p	signature:(GLfloat factor, GLfloat units)$/;"	p	file:	signature:(GLfloat factor, GLfloat units)
glPolygonStipple	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPolygonStipple (const GLubyte *mask);$/;"	p	signature:(const GLubyte *mask)
glPopAttrib	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPopAttrib (void);$/;"	p	signature:(void)
glPopAttrib	.\tags	/^glPopAttrib	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPopAttrib (void);$\/;"	p	signature:(void)$/;"	p	file:	signature:(void)
glPopClientAttrib	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPopClientAttrib (void);$/;"	p	signature:(void)
glPopMatrix	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPopMatrix (void);$/;"	p	signature:(void)
glPopMatrix	.\tags	/^glPopMatrix	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPopMatrix (void);$\/;"	p	signature:(void)$/;"	p	file:	signature:(void)
glPopName	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPopName (void);$/;"	p	signature:(void)
glPrioritizeTextures	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPrioritizeTextures (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	p	signature:(GLsizei n, const GLuint *textures, const GLclampf *priorities)
glPrioritizeTextures	.\tags	/^glPrioritizeTextures	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPrioritizeTextures (GLsizei n, const GLuint *textures, const GLclampf *priorities);$\/;"	p	signature:(GLsizei n, const GLuint *textures, const GLclampf *priorities)$/;"	p	file:	signature:(GLsizei n, const GLuint *textures, const GLclampf *priorities)
glPushAttrib	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPushAttrib (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glPushClientAttrib	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPushClientAttrib (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glPushClientAttrib	.\tags	/^glPushClientAttrib	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPushClientAttrib (GLbitfield mask);$\/;"	p	signature:(GLbitfield mask)$/;"	p	file:	signature:(GLbitfield mask)
glPushMatrix	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPushMatrix (void);$/;"	p	signature:(void)
glPushName	.\GL\GL.h	/^WINGDIAPI void APIENTRY glPushName (GLuint name);$/;"	p	signature:(GLuint name)
glPushName	.\tags	/^glPushName	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glPushName (GLuint name);$\/;"	p	signature:(GLuint name)$/;"	p	file:	signature:(GLuint name)
glRasterPos2d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos2d (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glRasterPos2dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos2dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glRasterPos2dv	.\tags	/^glRasterPos2dv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos2dv (const GLdouble *v);$\/;"	p	signature:(const GLdouble *v)$/;"	p	file:	signature:(const GLdouble *v)
glRasterPos2f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos2f (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glRasterPos2fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos2fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glRasterPos2fv	.\tags	/^glRasterPos2fv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos2fv (const GLfloat *v);$\/;"	p	signature:(const GLfloat *v)$/;"	p	file:	signature:(const GLfloat *v)
glRasterPos2i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos2i (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glRasterPos2iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos2iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glRasterPos2iv	.\tags	/^glRasterPos2iv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos2iv (const GLint *v);$\/;"	p	signature:(const GLint *v)$/;"	p	file:	signature:(const GLint *v)
glRasterPos2s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos2s (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glRasterPos2sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos2sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glRasterPos2sv	.\tags	/^glRasterPos2sv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos2sv (const GLshort *v);$\/;"	p	signature:(const GLshort *v)$/;"	p	file:	signature:(const GLshort *v)
glRasterPos3d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos3d (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glRasterPos3dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glRasterPos3dv	.\tags	/^glRasterPos3dv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos3dv (const GLdouble *v);$\/;"	p	signature:(const GLdouble *v)$/;"	p	file:	signature:(const GLdouble *v)
glRasterPos3f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos3f (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glRasterPos3fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glRasterPos3fv	.\tags	/^glRasterPos3fv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos3fv (const GLfloat *v);$\/;"	p	signature:(const GLfloat *v)$/;"	p	file:	signature:(const GLfloat *v)
glRasterPos3i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos3i (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glRasterPos3iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glRasterPos3iv	.\tags	/^glRasterPos3iv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos3iv (const GLint *v);$\/;"	p	signature:(const GLint *v)$/;"	p	file:	signature:(const GLint *v)
glRasterPos3s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos3s (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glRasterPos3sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glRasterPos3sv	.\tags	/^glRasterPos3sv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos3sv (const GLshort *v);$\/;"	p	signature:(const GLshort *v)$/;"	p	file:	signature:(const GLshort *v)
glRasterPos4d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glRasterPos4dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos4dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glRasterPos4dv	.\tags	/^glRasterPos4dv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos4dv (const GLdouble *v);$\/;"	p	signature:(const GLdouble *v)$/;"	p	file:	signature:(const GLdouble *v)
glRasterPos4f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glRasterPos4fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos4fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glRasterPos4fv	.\tags	/^glRasterPos4fv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos4fv (const GLfloat *v);$\/;"	p	signature:(const GLfloat *v)$/;"	p	file:	signature:(const GLfloat *v)
glRasterPos4i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos4i (GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLint x, GLint y, GLint z, GLint w)
glRasterPos4iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos4iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glRasterPos4iv	.\tags	/^glRasterPos4iv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos4iv (const GLint *v);$\/;"	p	signature:(const GLint *v)$/;"	p	file:	signature:(const GLint *v)
glRasterPos4s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLshort x, GLshort y, GLshort z, GLshort w)
glRasterPos4sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRasterPos4sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glRasterPos4sv	.\tags	/^glRasterPos4sv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRasterPos4sv (const GLshort *v);$\/;"	p	signature:(const GLshort *v)$/;"	p	file:	signature:(const GLshort *v)
glReadBuffer	.\GL\GL.h	/^WINGDIAPI void APIENTRY glReadBuffer (GLenum mode);$/;"	p	signature:(GLenum mode)
glReadPixels	.\GL\GL.h	/^WINGDIAPI void APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
glReadPixels	.\tags	/^glReadPixels	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);$\/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)$/;"	p	file:	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
glRectd	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);$/;"	p	signature:(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)
glRectdv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRectdv (const GLdouble *v1, const GLdouble *v2);$/;"	p	signature:(const GLdouble *v1, const GLdouble *v2)
glRectdv	.\tags	/^glRectdv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRectdv (const GLdouble *v1, const GLdouble *v2);$\/;"	p	signature:(const GLdouble *v1, const GLdouble *v2)$/;"	p	file:	signature:(const GLdouble *v1, const GLdouble *v2)
glRectf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);$/;"	p	signature:(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)
glRectfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRectfv (const GLfloat *v1, const GLfloat *v2);$/;"	p	signature:(const GLfloat *v1, const GLfloat *v2)
glRectfv	.\tags	/^glRectfv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRectfv (const GLfloat *v1, const GLfloat *v2);$\/;"	p	signature:(const GLfloat *v1, const GLfloat *v2)$/;"	p	file:	signature:(const GLfloat *v1, const GLfloat *v2)
glRecti	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRecti (GLint x1, GLint y1, GLint x2, GLint y2);$/;"	p	signature:(GLint x1, GLint y1, GLint x2, GLint y2)
glRectiv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRectiv (const GLint *v1, const GLint *v2);$/;"	p	signature:(const GLint *v1, const GLint *v2)
glRectiv	.\tags	/^glRectiv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRectiv (const GLint *v1, const GLint *v2);$\/;"	p	signature:(const GLint *v1, const GLint *v2)$/;"	p	file:	signature:(const GLint *v1, const GLint *v2)
glRects	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);$/;"	p	signature:(GLshort x1, GLshort y1, GLshort x2, GLshort y2)
glRectsv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRectsv (const GLshort *v1, const GLshort *v2);$/;"	p	signature:(const GLshort *v1, const GLshort *v2)
glRectsv	.\tags	/^glRectsv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRectsv (const GLshort *v1, const GLshort *v2);$\/;"	p	signature:(const GLshort *v1, const GLshort *v2)$/;"	p	file:	signature:(const GLshort *v1, const GLshort *v2)
glRenderMode	.\GL\GL.h	/^WINGDIAPI GLint APIENTRY glRenderMode (GLenum mode);$/;"	p	signature:(GLenum mode)
glRotated	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
glRotated	.\tags	/^glRotated	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$\/;"	p	signature:(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)$/;"	p	file:	signature:(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
glRotatef	.\GL\GL.h	/^WINGDIAPI void APIENTRY glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
glScaled	.\GL\GL.h	/^WINGDIAPI void APIENTRY glScaled (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glScaled	.\tags	/^glScaled	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glScaled (GLdouble x, GLdouble y, GLdouble z);$\/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)$/;"	p	file:	signature:(GLdouble x, GLdouble y, GLdouble z)
glScalef	.\GL\GL.h	/^WINGDIAPI void APIENTRY glScalef (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glScissor	.\GL\GL.h	/^WINGDIAPI void APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height)
glScissor	.\tags	/^glScissor	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);$\/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height)$/;"	p	file:	signature:(GLint x, GLint y, GLsizei width, GLsizei height)
glSelectBuffer	.\GL\GL.h	/^WINGDIAPI void APIENTRY glSelectBuffer (GLsizei size, GLuint *buffer);$/;"	p	signature:(GLsizei size, GLuint *buffer)
glShadeModel	.\GL\GL.h	/^WINGDIAPI void APIENTRY glShadeModel (GLenum mode);$/;"	p	signature:(GLenum mode)
glShadeModel	.\tags	/^glShadeModel	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glShadeModel (GLenum mode);$\/;"	p	signature:(GLenum mode)$/;"	p	file:	signature:(GLenum mode)
glStencilFunc	.\GL\GL.h	/^WINGDIAPI void APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);$/;"	p	signature:(GLenum func, GLint ref, GLuint mask)
glStencilMask	.\GL\GL.h	/^WINGDIAPI void APIENTRY glStencilMask (GLuint mask);$/;"	p	signature:(GLuint mask)
glStencilMask	.\tags	/^glStencilMask	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glStencilMask (GLuint mask);$\/;"	p	signature:(GLuint mask)$/;"	p	file:	signature:(GLuint mask)
glStencilOp	.\GL\GL.h	/^WINGDIAPI void APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);$/;"	p	signature:(GLenum fail, GLenum zfail, GLenum zpass)
glTexCoord1d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord1d (GLdouble s);$/;"	p	signature:(GLdouble s)
glTexCoord1d	.\tags	/^glTexCoord1d	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord1d (GLdouble s);$\/;"	p	signature:(GLdouble s)$/;"	p	file:	signature:(GLdouble s)
glTexCoord1dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord1dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glTexCoord1f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord1f (GLfloat s);$/;"	p	signature:(GLfloat s)
glTexCoord1f	.\tags	/^glTexCoord1f	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord1f (GLfloat s);$\/;"	p	signature:(GLfloat s)$/;"	p	file:	signature:(GLfloat s)
glTexCoord1fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord1fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glTexCoord1i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord1i (GLint s);$/;"	p	signature:(GLint s)
glTexCoord1i	.\tags	/^glTexCoord1i	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord1i (GLint s);$\/;"	p	signature:(GLint s)$/;"	p	file:	signature:(GLint s)
glTexCoord1iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord1iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glTexCoord1s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord1s (GLshort s);$/;"	p	signature:(GLshort s)
glTexCoord1s	.\tags	/^glTexCoord1s	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord1s (GLshort s);$\/;"	p	signature:(GLshort s)$/;"	p	file:	signature:(GLshort s)
glTexCoord1sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord1sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glTexCoord2d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord2d (GLdouble s, GLdouble t);$/;"	p	signature:(GLdouble s, GLdouble t)
glTexCoord2d	.\tags	/^glTexCoord2d	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord2d (GLdouble s, GLdouble t);$\/;"	p	signature:(GLdouble s, GLdouble t)$/;"	p	file:	signature:(GLdouble s, GLdouble t)
glTexCoord2dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord2dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glTexCoord2f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord2f (GLfloat s, GLfloat t);$/;"	p	signature:(GLfloat s, GLfloat t)
glTexCoord2f	.\tags	/^glTexCoord2f	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord2f (GLfloat s, GLfloat t);$\/;"	p	signature:(GLfloat s, GLfloat t)$/;"	p	file:	signature:(GLfloat s, GLfloat t)
glTexCoord2fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord2fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glTexCoord2i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord2i (GLint s, GLint t);$/;"	p	signature:(GLint s, GLint t)
glTexCoord2i	.\tags	/^glTexCoord2i	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord2i (GLint s, GLint t);$\/;"	p	signature:(GLint s, GLint t)$/;"	p	file:	signature:(GLint s, GLint t)
glTexCoord2iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord2iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glTexCoord2s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord2s (GLshort s, GLshort t);$/;"	p	signature:(GLshort s, GLshort t)
glTexCoord2s	.\tags	/^glTexCoord2s	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord2s (GLshort s, GLshort t);$\/;"	p	signature:(GLshort s, GLshort t)$/;"	p	file:	signature:(GLshort s, GLshort t)
glTexCoord2sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord2sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glTexCoord3d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);$/;"	p	signature:(GLdouble s, GLdouble t, GLdouble r)
glTexCoord3d	.\tags	/^glTexCoord3d	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);$\/;"	p	signature:(GLdouble s, GLdouble t, GLdouble r)$/;"	p	file:	signature:(GLdouble s, GLdouble t, GLdouble r)
glTexCoord3dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glTexCoord3f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat r)
glTexCoord3f	.\tags	/^glTexCoord3f	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);$\/;"	p	signature:(GLfloat s, GLfloat t, GLfloat r)$/;"	p	file:	signature:(GLfloat s, GLfloat t, GLfloat r)
glTexCoord3fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glTexCoord3i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord3i (GLint s, GLint t, GLint r);$/;"	p	signature:(GLint s, GLint t, GLint r)
glTexCoord3i	.\tags	/^glTexCoord3i	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord3i (GLint s, GLint t, GLint r);$\/;"	p	signature:(GLint s, GLint t, GLint r)$/;"	p	file:	signature:(GLint s, GLint t, GLint r)
glTexCoord3iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glTexCoord3s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord3s (GLshort s, GLshort t, GLshort r);$/;"	p	signature:(GLshort s, GLshort t, GLshort r)
glTexCoord3s	.\tags	/^glTexCoord3s	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord3s (GLshort s, GLshort t, GLshort r);$\/;"	p	signature:(GLshort s, GLshort t, GLshort r)$/;"	p	file:	signature:(GLshort s, GLshort t, GLshort r)
glTexCoord3sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glTexCoord4d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	p	signature:(GLdouble s, GLdouble t, GLdouble r, GLdouble q)
glTexCoord4d	.\tags	/^glTexCoord4d	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);$\/;"	p	signature:(GLdouble s, GLdouble t, GLdouble r, GLdouble q)$/;"	p	file:	signature:(GLdouble s, GLdouble t, GLdouble r, GLdouble q)
glTexCoord4dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord4dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glTexCoord4f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat r, GLfloat q)
glTexCoord4f	.\tags	/^glTexCoord4f	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);$\/;"	p	signature:(GLfloat s, GLfloat t, GLfloat r, GLfloat q)$/;"	p	file:	signature:(GLfloat s, GLfloat t, GLfloat r, GLfloat q)
glTexCoord4fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord4fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glTexCoord4i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord4i (GLint s, GLint t, GLint r, GLint q);$/;"	p	signature:(GLint s, GLint t, GLint r, GLint q)
glTexCoord4i	.\tags	/^glTexCoord4i	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord4i (GLint s, GLint t, GLint r, GLint q);$\/;"	p	signature:(GLint s, GLint t, GLint r, GLint q)$/;"	p	file:	signature:(GLint s, GLint t, GLint r, GLint q)
glTexCoord4iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord4iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glTexCoord4s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);$/;"	p	signature:(GLshort s, GLshort t, GLshort r, GLshort q)
glTexCoord4s	.\tags	/^glTexCoord4s	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);$\/;"	p	signature:(GLshort s, GLshort t, GLshort r, GLshort q)$/;"	p	file:	signature:(GLshort s, GLshort t, GLshort r, GLshort q)
glTexCoord4sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoord4sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glTexCoordPointer	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glTexCoordPointer	.\tags	/^glTexCoordPointer	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$\/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	p	file:	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glTexEnvf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexEnvf (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glTexEnvfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glTexEnvfv	.\tags	/^glTexEnvfv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params);$\/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)$/;"	p	file:	signature:(GLenum target, GLenum pname, const GLfloat *params)
glTexEnvi	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexEnvi (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glTexEnviv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexEnviv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glTexEnviv	.\tags	/^glTexEnviv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexEnviv (GLenum target, GLenum pname, const GLint *params);$\/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)$/;"	p	file:	signature:(GLenum target, GLenum pname, const GLint *params)
glTexGend	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexGend (GLenum coord, GLenum pname, GLdouble param);$/;"	p	signature:(GLenum coord, GLenum pname, GLdouble param)
glTexGendv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexGendv (GLenum coord, GLenum pname, const GLdouble *params);$/;"	p	signature:(GLenum coord, GLenum pname, const GLdouble *params)
glTexGendv	.\tags	/^glTexGendv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexGendv (GLenum coord, GLenum pname, const GLdouble *params);$\/;"	p	signature:(GLenum coord, GLenum pname, const GLdouble *params)$/;"	p	file:	signature:(GLenum coord, GLenum pname, const GLdouble *params)
glTexGenf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexGenf (GLenum coord, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum coord, GLenum pname, GLfloat param)
glTexGenfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexGenfv (GLenum coord, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum coord, GLenum pname, const GLfloat *params)
glTexGenfv	.\tags	/^glTexGenfv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexGenfv (GLenum coord, GLenum pname, const GLfloat *params);$\/;"	p	signature:(GLenum coord, GLenum pname, const GLfloat *params)$/;"	p	file:	signature:(GLenum coord, GLenum pname, const GLfloat *params)
glTexGeni	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexGeni (GLenum coord, GLenum pname, GLint param);$/;"	p	signature:(GLenum coord, GLenum pname, GLint param)
glTexGeniv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexGeniv (GLenum coord, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum coord, GLenum pname, const GLint *params)
glTexGeniv	.\tags	/^glTexGeniv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexGeniv (GLenum coord, GLenum pname, const GLint *params);$\/;"	p	signature:(GLenum coord, GLenum pname, const GLint *params)$/;"	p	file:	signature:(GLenum coord, GLenum pname, const GLint *params)
glTexImage1D	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTexImage2D	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTexImage2D	.\tags	/^glTexImage2D	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$\/;"	p	signature:(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)$/;"	p	file:	signature:(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTexParameterf	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glTexParameterfv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glTexParameterfv	.\tags	/^glTexParameterfv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);$\/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)$/;"	p	file:	signature:(GLenum target, GLenum pname, const GLfloat *params)
glTexParameteri	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glTexParameteriv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glTexParameteriv	.\tags	/^glTexParameteriv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint *params);$\/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)$/;"	p	file:	signature:(GLenum target, GLenum pname, const GLint *params)
glTexSubImage1D	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
glTexSubImage2D	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
glTexSubImage2D	.\tags	/^glTexSubImage2D	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$\/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)$/;"	p	file:	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
glTranslated	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTranslated (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glTranslatef	.\GL\GL.h	/^WINGDIAPI void APIENTRY glTranslatef (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glTranslatef	.\tags	/^glTranslatef	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glTranslatef (GLfloat x, GLfloat y, GLfloat z);$\/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)$/;"	p	file:	signature:(GLfloat x, GLfloat y, GLfloat z)
glVertex2d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex2d (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glVertex2dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex2dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glVertex2dv	.\tags	/^glVertex2dv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex2dv (const GLdouble *v);$\/;"	p	signature:(const GLdouble *v)$/;"	p	file:	signature:(const GLdouble *v)
glVertex2f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex2f (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glVertex2fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex2fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glVertex2fv	.\tags	/^glVertex2fv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex2fv (const GLfloat *v);$\/;"	p	signature:(const GLfloat *v)$/;"	p	file:	signature:(const GLfloat *v)
glVertex2i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex2i (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glVertex2iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex2iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glVertex2iv	.\tags	/^glVertex2iv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex2iv (const GLint *v);$\/;"	p	signature:(const GLint *v)$/;"	p	file:	signature:(const GLint *v)
glVertex2s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex2s (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glVertex2sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex2sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glVertex2sv	.\tags	/^glVertex2sv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex2sv (const GLshort *v);$\/;"	p	signature:(const GLshort *v)$/;"	p	file:	signature:(const GLshort *v)
glVertex3d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex3d (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glVertex3dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glVertex3dv	.\tags	/^glVertex3dv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex3dv (const GLdouble *v);$\/;"	p	signature:(const GLdouble *v)$/;"	p	file:	signature:(const GLdouble *v)
glVertex3f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex3f (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glVertex3fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glVertex3fv	.\tags	/^glVertex3fv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex3fv (const GLfloat *v);$\/;"	p	signature:(const GLfloat *v)$/;"	p	file:	signature:(const GLfloat *v)
glVertex3i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex3i (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glVertex3iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glVertex3iv	.\tags	/^glVertex3iv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex3iv (const GLint *v);$\/;"	p	signature:(const GLint *v)$/;"	p	file:	signature:(const GLint *v)
glVertex3s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex3s (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glVertex3sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glVertex3sv	.\tags	/^glVertex3sv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex3sv (const GLshort *v);$\/;"	p	signature:(const GLshort *v)$/;"	p	file:	signature:(const GLshort *v)
glVertex4d	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertex4dv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex4dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glVertex4dv	.\tags	/^glVertex4dv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex4dv (const GLdouble *v);$\/;"	p	signature:(const GLdouble *v)$/;"	p	file:	signature:(const GLdouble *v)
glVertex4f	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertex4fv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex4fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glVertex4fv	.\tags	/^glVertex4fv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex4fv (const GLfloat *v);$\/;"	p	signature:(const GLfloat *v)$/;"	p	file:	signature:(const GLfloat *v)
glVertex4i	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex4i (GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLint x, GLint y, GLint z, GLint w)
glVertex4iv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex4iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glVertex4iv	.\tags	/^glVertex4iv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex4iv (const GLint *v);$\/;"	p	signature:(const GLint *v)$/;"	p	file:	signature:(const GLint *v)
glVertex4s	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLshort x, GLshort y, GLshort z, GLshort w)
glVertex4sv	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertex4sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glVertex4sv	.\tags	/^glVertex4sv	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glVertex4sv (const GLshort *v);$\/;"	p	signature:(const GLshort *v)$/;"	p	file:	signature:(const GLshort *v)
glVertexPointer	.\GL\GL.h	/^WINGDIAPI void APIENTRY glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glViewport	.\GL\GL.h	/^WINGDIAPI void APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height)
glViewport	.\tags	/^glViewport	.\\GL\\GL.h	\/^WINGDIAPI void APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);$\/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height)$/;"	p	file:	signature:(GLint x, GLint y, GLsizei width, GLsizei height)
gluBeginCurve	.\GL\GLU.h	/^void APIENTRY gluBeginCurve ($/;"	p	signature:( GLUnurbs *nobj)
gluBeginPolygon	.\GL\GLU.h	/^void APIENTRY   gluBeginPolygon( GLUtesselator *tess );$/;"	p	signature:( GLUtesselator *tess )
gluBeginSurface	.\GL\GLU.h	/^void APIENTRY gluBeginSurface ($/;"	p	signature:( GLUnurbs *nobj)
gluBeginTrim	.\GL\GLU.h	/^void APIENTRY gluBeginTrim ($/;"	p	signature:( GLUnurbs *nobj)
gluBuild1DMipmaps	.\GL\GLU.h	/^int APIENTRY gluBuild1DMipmaps ($/;"	p	signature:( GLenum target, GLint components, GLint width, GLenum format, GLenum type, const void *data)
gluBuild2DMipmaps	.\GL\GLU.h	/^int APIENTRY gluBuild2DMipmaps ($/;"	p	signature:( GLenum target, GLint components, GLint width, GLint height, GLenum format, GLenum type, const void *data)
gluCylinder	.\GL\GLU.h	/^void APIENTRY gluCylinder ($/;"	p	signature:( GLUquadric *qobj, GLdouble baseRadius, GLdouble topRadius, GLdouble height, GLint slices, GLint stacks)
gluDeleteNurbsRenderer	.\GL\GLU.h	/^void APIENTRY gluDeleteNurbsRenderer ($/;"	p	signature:( GLUnurbs *nobj)
gluDeleteQuadric	.\GL\GLU.h	/^void APIENTRY gluDeleteQuadric ($/;"	p	signature:( GLUquadric *state)
gluDeleteTess	.\GL\GLU.h	/^void APIENTRY  gluDeleteTess(       $/;"	p	signature:( GLUtesselator *tess )
gluDisk	.\GL\GLU.h	/^void APIENTRY gluDisk ($/;"	p	signature:( GLUquadric *qobj, GLdouble innerRadius, GLdouble outerRadius, GLint slices, GLint loops)
gluEndCurve	.\GL\GLU.h	/^void APIENTRY gluEndCurve ($/;"	p	signature:( GLUnurbs *nobj)
gluEndPolygon	.\GL\GLU.h	/^void APIENTRY   gluEndPolygon(   GLUtesselator *tess );$/;"	p	signature:( GLUtesselator *tess )
gluEndSurface	.\GL\GLU.h	/^void APIENTRY gluEndSurface ($/;"	p	signature:( GLUnurbs *nobj)
gluEndTrim	.\GL\GLU.h	/^void APIENTRY gluEndTrim ($/;"	p	signature:( GLUnurbs *nobj)
gluErrorString	.\GL\GLU.h	/^const GLubyte* APIENTRY gluErrorString ($/;"	p	signature:( GLenum errCode)
gluErrorStringWIN	.\GL\GLU.h	55;"	d
gluErrorStringWIN	.\GL\GLU.h	57;"	d
gluErrorUnicodeStringEXT	.\GL\GLU.h	/^const wchar_t* APIENTRY gluErrorUnicodeStringEXT ($/;"	p	signature:( GLenum errCode)
gluGetNurbsProperty	.\GL\GLU.h	/^gluGetNurbsProperty ($/;"	p	signature:( GLUnurbs *nobj, GLenum property, GLfloat *value )
gluGetString	.\GL\GLU.h	/^const GLubyte* APIENTRY gluGetString ($/;"	p	signature:( GLenum name)
gluGetTessProperty	.\GL\GLU.h	/^void APIENTRY  gluGetTessProperty(  $/;"	p	signature:( GLUtesselator *tess, GLenum which, GLdouble *value )
gluLoadSamplingMatrices	.\GL\GLU.h	/^gluLoadSamplingMatrices ($/;"	p	signature:( GLUnurbs *nobj, const GLfloat modelMatrix[16], const GLfloat projMatrix[16], const GLint viewport[4] )
gluLookAt	.\GL\GLU.h	/^void APIENTRY gluLookAt ($/;"	p	signature:( GLdouble eyex, GLdouble eyey, GLdouble eyez, GLdouble centerx, GLdouble centery, GLdouble centerz, GLdouble upx, GLdouble upy, GLdouble upz)
gluNewNurbsRenderer	.\GL\GLU.h	/^GLUnurbs* APIENTRY gluNewNurbsRenderer (void);$/;"	p	signature:(void)
gluNewQuadric	.\GL\GLU.h	/^GLUquadric* APIENTRY gluNewQuadric (void);$/;"	p	signature:(void)
gluNewTess	.\GL\GLU.h	/^GLUtesselator* APIENTRY  gluNewTess(          $/;"	p	signature:( void )
gluNextContour	.\GL\GLU.h	/^void APIENTRY   gluNextContour(  GLUtesselator *tess, $/;"	p	signature:( GLUtesselator *tess, GLenum type )
gluNurbsCallback	.\GL\GLU.h	/^gluNurbsCallback ($/;"	p	signature:( GLUnurbs *nobj, GLenum which, void (CALLBACK* fn)() )
gluNurbsCurve	.\GL\GLU.h	/^void APIENTRY gluNurbsCurve ($/;"	p	signature:( GLUnurbs *nobj, GLint nknots, GLfloat *knot, GLint stride, GLfloat *ctlarray, GLint order, GLenum type)
gluNurbsProperty	.\GL\GLU.h	/^gluNurbsProperty ($/;"	p	signature:( GLUnurbs *nobj, GLenum property, GLfloat value )
gluNurbsSurface	.\GL\GLU.h	/^gluNurbsSurface(     $/;"	p	signature:( GLUnurbs *nobj, GLint sknot_count, float *sknot, GLint tknot_count, GLfloat *tknot, GLint s_stride, GLint t_stride, GLfloat *ctlarray, GLint sorder, GLint torder, GLenum type)
gluOrtho2D	.\GL\GLU.h	/^void APIENTRY gluOrtho2D ($/;"	p	signature:( GLdouble left, GLdouble right, GLdouble bottom, GLdouble top)
gluPartialDisk	.\GL\GLU.h	/^void APIENTRY gluPartialDisk ($/;"	p	signature:( GLUquadric *qobj, GLdouble innerRadius, GLdouble outerRadius, GLint slices, GLint loops, GLdouble startAngle, GLdouble sweepAngle)
gluPerspective	.\GL\GLU.h	/^void APIENTRY gluPerspective ($/;"	p	signature:( GLdouble fovy, GLdouble aspect, GLdouble zNear, GLdouble zFar)
gluPickMatrix	.\GL\GLU.h	/^void APIENTRY gluPickMatrix ($/;"	p	signature:( GLdouble x, GLdouble y, GLdouble width, GLdouble height, GLint viewport[4])
gluProject	.\GL\GLU.h	/^int APIENTRY gluProject ($/;"	p	signature:( GLdouble objx, GLdouble objy, GLdouble objz, const GLdouble modelMatrix[16], const GLdouble projMatrix[16], const GLint viewport[4], GLdouble *winx, GLdouble *winy, GLdouble *winz)
gluPwlCurve	.\GL\GLU.h	/^void APIENTRY gluPwlCurve ($/;"	p	signature:( GLUnurbs *nobj, GLint count, GLfloat *array, GLint stride, GLenum type)
gluQuadricCallback	.\GL\GLU.h	/^void APIENTRY gluQuadricCallback ($/;"	p	signature:( GLUquadric *qobj, GLenum which, void (CALLBACK* fn)())
gluQuadricDrawStyle	.\GL\GLU.h	/^void APIENTRY gluQuadricDrawStyle ($/;"	p	signature:( GLUquadric *quadObject, GLenum drawStyle)
gluQuadricNormals	.\GL\GLU.h	/^void APIENTRY gluQuadricNormals ($/;"	p	signature:( GLUquadric *quadObject, GLenum normals)
gluQuadricOrientation	.\GL\GLU.h	/^void APIENTRY gluQuadricOrientation ($/;"	p	signature:( GLUquadric *quadObject, GLenum orientation)
gluQuadricTexture	.\GL\GLU.h	/^void APIENTRY gluQuadricTexture ($/;"	p	signature:( GLUquadric *quadObject, GLboolean textureCoords)
gluScaleImage	.\GL\GLU.h	/^int APIENTRY gluScaleImage ($/;"	p	signature:( GLenum format, GLint widthin, GLint heightin, GLenum typein, const void *datain, GLint widthout, GLint heightout, GLenum typeout, void *dataout)
gluSphere	.\GL\GLU.h	/^void APIENTRY gluSphere ($/;"	p	signature:( GLUquadric *qobj, GLdouble radius, GLint slices, GLint stacks)
gluTessBeginContour	.\GL\GLU.h	/^void APIENTRY  gluTessBeginContour( $/;"	p	signature:( GLUtesselator *tess )
gluTessBeginPolygon	.\GL\GLU.h	/^void APIENTRY  gluTessBeginPolygon( $/;"	p	signature:( GLUtesselator *tess, void *polygon_data )
gluTessCallback	.\GL\GLU.h	/^void APIENTRY  gluTessCallback(     $/;"	p	signature:( GLUtesselator *tess, GLenum which, void (CALLBACK *fn)())
gluTessEndContour	.\GL\GLU.h	/^void APIENTRY  gluTessEndContour(   $/;"	p	signature:( GLUtesselator *tess )
gluTessEndPolygon	.\GL\GLU.h	/^void APIENTRY  gluTessEndPolygon(   $/;"	p	signature:( GLUtesselator *tess )
gluTessNormal	.\GL\GLU.h	/^void APIENTRY  gluTessNormal(       $/;"	p	signature:( GLUtesselator *tess, GLdouble x, GLdouble y, GLdouble z )
gluTessProperty	.\GL\GLU.h	/^void APIENTRY  gluTessProperty(     $/;"	p	signature:( GLUtesselator *tess, GLenum which, GLdouble value )
gluTessVertex	.\GL\GLU.h	/^void APIENTRY  gluTessVertex(       $/;"	p	signature:( GLUtesselator *tess, GLdouble coords[3], void *data )
gluUnProject	.\GL\GLU.h	/^int APIENTRY gluUnProject ($/;"	p	signature:( GLdouble winx, GLdouble winy, GLdouble winz, const GLdouble modelMatrix[16], const GLdouble projMatrix[16], const GLint viewport[4], GLdouble *objx, GLdouble *objy, GLdouble *objz)
glutAddMenuEntry	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutAddMenuEntry( const char* label, int value );$/;"	p	signature:( const char* label, int value )
glutAddMenuEntry	.\tags	/^glutAddMenuEntry	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutAddMenuEntry( const char* label, int value );$\/;"	p	signature:( const char* label, int value )$/;"	p	file:	signature:( const char* label, int value )
glutAddSubMenu	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutAddSubMenu( const char* label, int subMenu );$/;"	p	signature:( const char* label, int subMenu )
glutAttachMenu	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutAttachMenu( int button );$/;"	p	signature:( int button )
glutBitmapCharacter	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutBitmapCharacter( void* font, int character );$/;"	p	signature:( void* font, int character )
glutBitmapCharacter	.\tags	/^glutBitmapCharacter	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutBitmapCharacter( void* font, int character );$\/;"	p	signature:( void* font, int character )$/;"	p	file:	signature:( void* font, int character )
glutBitmapHeight	.\GL\freeglut_ext.h	/^FGAPI int     FGAPIENTRY glutBitmapHeight( void* font );$/;"	p	signature:( void* font )
glutBitmapLength	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutBitmapLength( void* font, const unsigned char* string );$/;"	p	signature:( void* font, const unsigned char* string )
glutBitmapLength	.\tags	/^glutBitmapLength	.\\GL\\freeglut_std.h	\/^FGAPI int     FGAPIENTRY glutBitmapLength( void* font, const unsigned char* string );$\/;"	p	signature:( void* font, const unsigned char* string )$/;"	p	file:	signature:( void* font, const unsigned char* string )
glutBitmapString	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutBitmapString( void* font, const unsigned char *string );$/;"	p	signature:( void* font, const unsigned char *string )
glutBitmapWidth	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutBitmapWidth( void* font, int character );$/;"	p	signature:( void* font, int character )
glutButtonBoxFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutButtonBoxFunc( void (* callback)( int, int ) );$/;"	p	signature:( void (* callback)( int, int ) )
glutButtonBoxFunc	.\tags	/^glutButtonBoxFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutButtonBoxFunc( void (* callback)( int, int ) );$\/;"	p	signature:( void (* callback)( int, int ) )$/;"	p	file:	signature:( void (* callback)( int, int ) )
glutChangeToMenuEntry	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutChangeToMenuEntry( int item, const char* label, int value );$/;"	p	signature:( int item, const char* label, int value )
glutChangeToMenuEntry	.\tags	/^glutChangeToMenuEntry	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutChangeToMenuEntry( int item, const char* label, int value );$\/;"	p	signature:( int item, const char* label, int value )$/;"	p	file:	signature:( int item, const char* label, int value )
glutChangeToSubMenu	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutChangeToSubMenu( int item, const char* label, int value );$/;"	p	signature:( int item, const char* label, int value )
glutCloseFunc	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutCloseFunc( void (* callback)( void ) );$/;"	p	signature:( void (* callback)( void ) )
glutCloseFunc	.\tags	/^glutCloseFunc	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutCloseFunc( void (* callback)( void ) );$\/;"	p	signature:( void (* callback)( void ) )$/;"	p	file:	signature:( void (* callback)( void ) )
glutCopyColormap	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutCopyColormap( int window );$/;"	p	signature:( int window )
glutCreateMenu	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutCreateMenu( void (* callback)( int menu ) );$/;"	p	signature:( void (* callback)( int menu ) )
glutCreateMenu	.\GL\freeglut_std.h	617;"	d
glutCreateMenu	.\tags	/^glutCreateMenu	.\\GL\\freeglut_std.h	\/^FGAPI int     FGAPIENTRY glutCreateMenu( void (* callback)( int menu ) );$\/;"	p	signature:( void (* callback)( int menu ) )$/;"	p	file:	signature:( void (* callback)( int menu ) )
glutCreateMenu_ATEXIT_HACK	.\GL\freeglut_std.h	/^static int FGAPIENTRY FGUNUSED glutCreateMenu_ATEXIT_HACK(void (* func)(int)) { return __glutCreateMenuWithExit(func, exit); }$/;"	f	signature:(void (* func)(int))
glutCreateMenu_ATEXIT_HACK	.\tags	/^glutCreateMenu_ATEXIT_HACK	.\\GL\\freeglut_std.h	\/^static int FGAPIENTRY FGUNUSED glutCreateMenu_ATEXIT_HACK(void (* func)(int)) { return __glutCreateMenuWithExit(func, exit); }$\/;"	f	signature:(void (* func)(int))$/;"	f	file:	signature:(void (* func)(int))
glutCreateSubWindow	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutCreateSubWindow( int window, int x, int y, int width, int height );$/;"	p	signature:( int window, int x, int y, int width, int height )
glutCreateSubWindow	.\tags	/^glutCreateSubWindow	.\\GL\\freeglut_std.h	\/^FGAPI int     FGAPIENTRY glutCreateSubWindow( int window, int x, int y, int width, int height );$\/;"	p	signature:( int window, int x, int y, int width, int height )$/;"	p	file:	signature:( int window, int x, int y, int width, int height )
glutCreateWindow	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutCreateWindow( const char* title );$/;"	p	signature:( const char* title )
glutCreateWindow	.\GL\freeglut_std.h	615;"	d
glutCreateWindow_ATEXIT_HACK	.\GL\freeglut_std.h	/^static int FGAPIENTRY FGUNUSED glutCreateWindow_ATEXIT_HACK(const char *title) { return __glutCreateWindowWithExit(title, exit); }$/;"	f	signature:(const char *title)
glutCreateWindow_ATEXIT_HACK	.\tags	/^glutCreateWindow_ATEXIT_HACK	.\\GL\\freeglut_std.h	\/^static int FGAPIENTRY FGUNUSED glutCreateWindow_ATEXIT_HACK(const char *title) { return __glutCreateWindowWithExit(title, exit); }$\/;"	f	signature:(const char *title)$/;"	f	file:	signature:(const char *title)
glutDestroyMenu	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutDestroyMenu( int menu );$/;"	p	signature:( int menu )
glutDestroyWindow	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutDestroyWindow( int window );$/;"	p	signature:( int window )
glutDetachMenu	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutDetachMenu( int button );$/;"	p	signature:( int button )
glutDetachMenu	.\tags	/^glutDetachMenu	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutDetachMenu( int button );$\/;"	p	signature:( int button )$/;"	p	file:	signature:( int button )
glutDeviceGet	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutDeviceGet( GLenum query );$/;"	p	signature:( GLenum query )
glutDialsFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutDialsFunc( void (* callback)( int, int ) );$/;"	p	signature:( void (* callback)( int, int ) )
glutDisplayFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutDisplayFunc( void (* callback)( void ) );$/;"	p	signature:( void (* callback)( void ) )
glutEnterGameMode	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutEnterGameMode( void );$/;"	p	signature:( void )
glutEntryFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutEntryFunc( void (* callback)( int ) );$/;"	p	signature:( void (* callback)( int ) )
glutEstablishOverlay	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutEstablishOverlay( void );$/;"	p	signature:( void )
glutExit	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutExit         ( void );$/;"	p	signature:( void )
glutExit	.\tags	/^glutExit	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutExit         ( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutExtensionSupported	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutExtensionSupported( const char* extension );$/;"	p	signature:( const char* extension )
glutForceJoystickFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutForceJoystickFunc( void );$/;"	p	signature:( void )
glutForceJoystickFunc	.\tags	/^glutForceJoystickFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutForceJoystickFunc( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutFullScreen	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutFullScreen( void );$/;"	p	signature:( void )
glutFullScreenToggle	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutFullScreenToggle( void );$/;"	p	signature:( void )
glutGameModeGet	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutGameModeGet( GLenum query );$/;"	p	signature:( GLenum query )
glutGameModeString	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutGameModeString( const char* string );$/;"	p	signature:( const char* string )
glutGameModeString	.\tags	/^glutGameModeString	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutGameModeString( const char* string );$\/;"	p	signature:( const char* string )$/;"	p	file:	signature:( const char* string )
glutGet	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutGet( GLenum query );$/;"	p	signature:( GLenum query )
glutGet	.\tags	/^glutGet	.\\GL\\freeglut_std.h	\/^FGAPI int     FGAPIENTRY glutGet( GLenum query );$\/;"	p	signature:( GLenum query )$/;"	p	file:	signature:( GLenum query )
glutGetColor	.\GL\freeglut_std.h	/^FGAPI GLfloat FGAPIENTRY glutGetColor( int color, int component );$/;"	p	signature:( int color, int component )
glutGetColor	.\tags	/^glutGetColor	.\\GL\\freeglut_std.h	\/^FGAPI GLfloat FGAPIENTRY glutGetColor( int color, int component );$\/;"	p	signature:( int color, int component )$/;"	p	file:	signature:( int color, int component )
glutGetMenu	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutGetMenu( void );$/;"	p	signature:( void )
glutGetMenu	.\tags	/^glutGetMenu	.\\GL\\freeglut_std.h	\/^FGAPI int     FGAPIENTRY glutGetMenu( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutGetMenuData	.\GL\freeglut_ext.h	/^FGAPI void*   FGAPIENTRY glutGetMenuData( void );$/;"	p	signature:( void )
glutGetModeValues	.\GL\freeglut_ext.h	/^FGAPI int *   FGAPIENTRY glutGetModeValues(GLenum mode, int * size);$/;"	p	signature:(GLenum mode, int * size)
glutGetModeValues	.\tags	/^glutGetModeValues	.\\GL\\freeglut_ext.h	\/^FGAPI int *   FGAPIENTRY glutGetModeValues(GLenum mode, int * size);$\/;"	p	signature:(GLenum mode, int * size)$/;"	p	file:	signature:(GLenum mode, int * size)
glutGetModifiers	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutGetModifiers( void );$/;"	p	signature:( void )
glutGetModifiers	.\tags	/^glutGetModifiers	.\\GL\\freeglut_std.h	\/^FGAPI int     FGAPIENTRY glutGetModifiers( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutGetProcAddress	.\GL\freeglut_ext.h	/^FGAPI GLUTproc FGAPIENTRY glutGetProcAddress( const char *procName );$/;"	p	signature:( const char *procName )
glutGetProcAddress	.\tags	/^glutGetProcAddress	.\\GL\\freeglut_ext.h	\/^FGAPI GLUTproc FGAPIENTRY glutGetProcAddress( const char *procName );$\/;"	p	signature:( const char *procName )$/;"	p	file:	signature:( const char *procName )
glutGetWindow	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutGetWindow( void );$/;"	p	signature:( void )
glutGetWindowData	.\GL\freeglut_ext.h	/^FGAPI void*   FGAPIENTRY glutGetWindowData( void );$/;"	p	signature:( void )
glutHideOverlay	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutHideOverlay( void );$/;"	p	signature:( void )
glutHideWindow	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutHideWindow( void );$/;"	p	signature:( void )
glutIconifyWindow	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutIconifyWindow( void );$/;"	p	signature:( void )
glutIconifyWindow	.\tags	/^glutIconifyWindow	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutIconifyWindow( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutIdleFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutIdleFunc( void (* callback)( void ) );$/;"	p	signature:( void (* callback)( void ) )
glutIdleFunc	.\tags	/^glutIdleFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutIdleFunc( void (* callback)( void ) );$\/;"	p	signature:( void (* callback)( void ) )$/;"	p	file:	signature:( void (* callback)( void ) )
glutIgnoreKeyRepeat	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutIgnoreKeyRepeat( int ignore );$/;"	p	signature:( int ignore )
glutIgnoreKeyRepeat	.\tags	/^glutIgnoreKeyRepeat	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutIgnoreKeyRepeat( int ignore );$\/;"	p	signature:( int ignore )$/;"	p	file:	signature:( int ignore )
glutInit	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutInit( int* pargc, char** argv );$/;"	p	signature:( int* pargc, char** argv )
glutInit	.\GL\freeglut_std.h	613;"	d
glutInitContextFlags	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutInitContextFlags( int flags );$/;"	p	signature:( int flags )
glutInitContextFlags	.\tags	/^glutInitContextFlags	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutInitContextFlags( int flags );$\/;"	p	signature:( int flags )$/;"	p	file:	signature:( int flags )
glutInitContextProfile	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutInitContextProfile( int profile );$/;"	p	signature:( int profile )
glutInitContextVersion	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutInitContextVersion( int majorVersion, int minorVersion );$/;"	p	signature:( int majorVersion, int minorVersion )
glutInitDisplayMode	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutInitDisplayMode( unsigned int displayMode );$/;"	p	signature:( unsigned int displayMode )
glutInitDisplayMode	.\tags	/^glutInitDisplayMode	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutInitDisplayMode( unsigned int displayMode );$\/;"	p	signature:( unsigned int displayMode )$/;"	p	file:	signature:( unsigned int displayMode )
glutInitDisplayString	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutInitDisplayString( const char* displayMode );$/;"	p	signature:( const char* displayMode )
glutInitErrorFunc	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutInitErrorFunc( void (* vError)( const char *fmt, va_list ap ) );$/;"	p	signature:( void (* vError)( const char *fmt, va_list ap ) )
glutInitErrorFunc	.\tags	/^glutInitErrorFunc	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutInitErrorFunc( void (* vError)( const char *fmt, va_list ap ) );$\/;"	p	signature:( void (* vError)( const char *fmt, va_list ap ) )$/;"	p	file:	signature:( void (* vError)( const char *fmt, va_list ap ) )
glutInitWarningFunc	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutInitWarningFunc( void (* vWarning)( const char *fmt, va_list ap ) );$/;"	p	signature:( void (* vWarning)( const char *fmt, va_list ap ) )
glutInitWindowPosition	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutInitWindowPosition( int x, int y );$/;"	p	signature:( int x, int y )
glutInitWindowPosition	.\tags	/^glutInitWindowPosition	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutInitWindowPosition( int x, int y );$\/;"	p	signature:( int x, int y )$/;"	p	file:	signature:( int x, int y )
glutInitWindowSize	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutInitWindowSize( int width, int height );$/;"	p	signature:( int width, int height )
glutInit_ATEXIT_HACK	.\GL\freeglut_std.h	/^static void FGAPIENTRY FGUNUSED glutInit_ATEXIT_HACK(int *argcp, char **argv) { __glutInitWithExit(argcp, argv, exit); }$/;"	f	signature:(int *argcp, char **argv)
glutInit_ATEXIT_HACK	.\tags	/^glutInit_ATEXIT_HACK	.\\GL\\freeglut_std.h	\/^static void FGAPIENTRY FGUNUSED glutInit_ATEXIT_HACK(int *argcp, char **argv) { __glutInitWithExit(argcp, argv, exit); }$\/;"	f	signature:(int *argcp, char **argv)$/;"	f	file:	signature:(int *argcp, char **argv)
glutJoystickFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutJoystickFunc( void (* callback)( unsigned int, int, int, int ), int pollInterval );$/;"	p	signature:( void (* callback)( unsigned int, int, int, int ), int pollInterval )
glutJoystickFunc	.\tags	/^glutJoystickFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutJoystickFunc( void (* callback)( unsigned int, int, int, int ), int pollInterval );$\/;"	p	signature:( void (* callback)( unsigned int, int, int, int ), int pollInterval )$/;"	p	file:	signature:( void (* callback)( unsigned int, int, int, int ), int pollInterval )
glutJoystickGetCenter	.\GL\freeglut_ext.h	/^void    glutJoystickGetCenter( int ident, float *axes );$/;"	p	signature:( int ident, float *axes )
glutJoystickGetCenter	.\tags	/^glutJoystickGetCenter	.\\GL\\freeglut_ext.h	\/^void    glutJoystickGetCenter( int ident, float *axes );$\/;"	p	signature:( int ident, float *axes )$/;"	p	file:	signature:( int ident, float *axes )
glutJoystickGetDeadBand	.\GL\freeglut_ext.h	/^float   glutJoystickGetDeadBand( int ident, int axis );$/;"	p	signature:( int ident, int axis )
glutJoystickGetMaxRange	.\GL\freeglut_ext.h	/^void    glutJoystickGetMaxRange( int ident, float *axes );$/;"	p	signature:( int ident, float *axes )
glutJoystickGetMinRange	.\GL\freeglut_ext.h	/^void    glutJoystickGetMinRange( int ident, float *axes );$/;"	p	signature:( int ident, float *axes )
glutJoystickGetMinRange	.\tags	/^glutJoystickGetMinRange	.\\GL\\freeglut_ext.h	\/^void    glutJoystickGetMinRange( int ident, float *axes );$\/;"	p	signature:( int ident, float *axes )$/;"	p	file:	signature:( int ident, float *axes )
glutJoystickGetNumAxes	.\GL\freeglut_ext.h	/^int     glutJoystickGetNumAxes( int ident );$/;"	p	signature:( int ident )
glutJoystickGetNumAxes	.\tags	/^glutJoystickGetNumAxes	.\\GL\\freeglut_ext.h	\/^int     glutJoystickGetNumAxes( int ident );$\/;"	p	signature:( int ident )$/;"	p	file:	signature:( int ident )
glutJoystickGetNumButtons	.\GL\freeglut_ext.h	/^int     glutJoystickGetNumButtons( int ident );$/;"	p	signature:( int ident )
glutJoystickGetSaturation	.\GL\freeglut_ext.h	/^float   glutJoystickGetSaturation( int ident, int axis );$/;"	p	signature:( int ident, int axis )
glutJoystickNotWorking	.\GL\freeglut_ext.h	/^int     glutJoystickNotWorking( int ident );$/;"	p	signature:( int ident )
glutJoystickNotWorking	.\tags	/^glutJoystickNotWorking	.\\GL\\freeglut_ext.h	\/^int     glutJoystickNotWorking( int ident );$\/;"	p	signature:( int ident )$/;"	p	file:	signature:( int ident )
glutJoystickSetCenter	.\GL\freeglut_ext.h	/^void    glutJoystickSetCenter( int ident, float *axes );$/;"	p	signature:( int ident, float *axes )
glutJoystickSetDeadBand	.\GL\freeglut_ext.h	/^void    glutJoystickSetDeadBand( int ident, int axis, float db );$/;"	p	signature:( int ident, int axis, float db )
glutJoystickSetDeadBand	.\tags	/^glutJoystickSetDeadBand	.\\GL\\freeglut_ext.h	\/^void    glutJoystickSetDeadBand( int ident, int axis, float db );$\/;"	p	signature:( int ident, int axis, float db )$/;"	p	file:	signature:( int ident, int axis, float db )
glutJoystickSetMaxRange	.\GL\freeglut_ext.h	/^void    glutJoystickSetMaxRange( int ident, float *axes );$/;"	p	signature:( int ident, float *axes )
glutJoystickSetMaxRange	.\tags	/^glutJoystickSetMaxRange	.\\GL\\freeglut_ext.h	\/^void    glutJoystickSetMaxRange( int ident, float *axes );$\/;"	p	signature:( int ident, float *axes )$/;"	p	file:	signature:( int ident, float *axes )
glutJoystickSetMinRange	.\GL\freeglut_ext.h	/^void    glutJoystickSetMinRange( int ident, float *axes );$/;"	p	signature:( int ident, float *axes )
glutJoystickSetSaturation	.\GL\freeglut_ext.h	/^void    glutJoystickSetSaturation( int ident, int axis, float st );$/;"	p	signature:( int ident, int axis, float st )
glutJoystickSetSaturation	.\tags	/^glutJoystickSetSaturation	.\\GL\\freeglut_ext.h	\/^void    glutJoystickSetSaturation( int ident, int axis, float st );$\/;"	p	signature:( int ident, int axis, float st )$/;"	p	file:	signature:( int ident, int axis, float st )
glutKeyboardFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutKeyboardFunc( void (* callback)( unsigned char, int, int ) );$/;"	p	signature:( void (* callback)( unsigned char, int, int ) )
glutKeyboardUpFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutKeyboardUpFunc( void (* callback)( unsigned char, int, int ) );$/;"	p	signature:( void (* callback)( unsigned char, int, int ) )
glutKeyboardUpFunc	.\tags	/^glutKeyboardUpFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutKeyboardUpFunc( void (* callback)( unsigned char, int, int ) );$\/;"	p	signature:( void (* callback)( unsigned char, int, int ) )$/;"	p	file:	signature:( void (* callback)( unsigned char, int, int ) )
glutLayerGet	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutLayerGet( GLenum query );$/;"	p	signature:( GLenum query )
glutLeaveFullScreen	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutLeaveFullScreen( void );$/;"	p	signature:( void )
glutLeaveFullScreen	.\tags	/^glutLeaveFullScreen	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutLeaveFullScreen( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutLeaveGameMode	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutLeaveGameMode( void );$/;"	p	signature:( void )
glutLeaveGameMode	.\tags	/^glutLeaveGameMode	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutLeaveGameMode( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutLeaveMainLoop	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutLeaveMainLoop( void );$/;"	p	signature:( void )
glutMainLoop	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutMainLoop( void );$/;"	p	signature:( void )
glutMainLoop	.\tags	/^glutMainLoop	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutMainLoop( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutMainLoopEvent	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutMainLoopEvent( void );$/;"	p	signature:( void )
glutMainLoopEvent	.\tags	/^glutMainLoopEvent	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutMainLoopEvent( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutMenuDestroyFunc	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutMenuDestroyFunc( void (* callback)( void ) );$/;"	p	signature:( void (* callback)( void ) )
glutMenuDestroyFunc	.\tags	/^glutMenuDestroyFunc	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutMenuDestroyFunc( void (* callback)( void ) );$\/;"	p	signature:( void (* callback)( void ) )$/;"	p	file:	signature:( void (* callback)( void ) )
glutMenuStateFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutMenuStateFunc( void (* callback)( int ) );$/;"	p	signature:( void (* callback)( int ) )
glutMenuStatusFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutMenuStatusFunc( void (* callback)( int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int ) )
glutMenuStatusFunc	.\tags	/^glutMenuStatusFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutMenuStatusFunc( void (* callback)( int, int, int ) );$\/;"	p	signature:( void (* callback)( int, int, int ) )$/;"	p	file:	signature:( void (* callback)( int, int, int ) )
glutMotionFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutMotionFunc( void (* callback)( int, int ) );$/;"	p	signature:( void (* callback)( int, int ) )
glutMouseFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutMouseFunc( void (* callback)( int, int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int, int ) )
glutMouseFunc	.\tags	/^glutMouseFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutMouseFunc( void (* callback)( int, int, int, int ) );$\/;"	p	signature:( void (* callback)( int, int, int, int ) )$/;"	p	file:	signature:( void (* callback)( int, int, int, int ) )
glutMouseWheelFunc	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutMouseWheelFunc( void (* callback)( int, int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int, int ) )
glutMultiButtonFunc	.\GL\freeglut_ext.h	/^FGAPI void FGAPIENTRY glutMultiButtonFunc( void (* callback)( int, int, int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int, int, int ) )
glutMultiEntryFunc	.\GL\freeglut_ext.h	/^FGAPI void FGAPIENTRY glutMultiEntryFunc( void (* callback)( int, int ) );$/;"	p	signature:( void (* callback)( int, int ) )
glutMultiEntryFunc	.\tags	/^glutMultiEntryFunc	.\\GL\\freeglut_ext.h	\/^FGAPI void FGAPIENTRY glutMultiEntryFunc( void (* callback)( int, int ) );$\/;"	p	signature:( void (* callback)( int, int ) )$/;"	p	file:	signature:( void (* callback)( int, int ) )
glutMultiMotionFunc	.\GL\freeglut_ext.h	/^FGAPI void FGAPIENTRY glutMultiMotionFunc( void (* callback)( int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int ) )
glutMultiMotionFunc	.\tags	/^glutMultiMotionFunc	.\\GL\\freeglut_ext.h	\/^FGAPI void FGAPIENTRY glutMultiMotionFunc( void (* callback)( int, int, int ) );$\/;"	p	signature:( void (* callback)( int, int, int ) )$/;"	p	file:	signature:( void (* callback)( int, int, int ) )
glutMultiPassiveFunc	.\GL\freeglut_ext.h	/^FGAPI void FGAPIENTRY glutMultiPassiveFunc( void (* callback)( int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int ) )
glutOverlayDisplayFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutOverlayDisplayFunc( void (* callback)( void ) );$/;"	p	signature:( void (* callback)( void ) )
glutPassiveMotionFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutPassiveMotionFunc( void (* callback)( int, int ) );$/;"	p	signature:( void (* callback)( int, int ) )
glutPassiveMotionFunc	.\tags	/^glutPassiveMotionFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutPassiveMotionFunc( void (* callback)( int, int ) );$\/;"	p	signature:( void (* callback)( int, int ) )$/;"	p	file:	signature:( void (* callback)( int, int ) )
glutPopWindow	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutPopWindow( void );$/;"	p	signature:( void )
glutPopWindow	.\tags	/^glutPopWindow	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutPopWindow( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutPositionWindow	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutPositionWindow( int x, int y );$/;"	p	signature:( int x, int y )
glutPostOverlayRedisplay	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutPostOverlayRedisplay( void );$/;"	p	signature:( void )
glutPostOverlayRedisplay	.\tags	/^glutPostOverlayRedisplay	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutPostOverlayRedisplay( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutPostRedisplay	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutPostRedisplay( void );$/;"	p	signature:( void )
glutPostWindowOverlayRedisplay	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutPostWindowOverlayRedisplay( int window );$/;"	p	signature:( int window )
glutPostWindowRedisplay	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutPostWindowRedisplay( int window );$/;"	p	signature:( int window )
glutPostWindowRedisplay	.\tags	/^glutPostWindowRedisplay	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutPostWindowRedisplay( int window );$\/;"	p	signature:( int window )$/;"	p	file:	signature:( int window )
glutPushWindow	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutPushWindow( void );$/;"	p	signature:( void )
glutRemoveMenuItem	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutRemoveMenuItem( int item );$/;"	p	signature:( int item )
glutRemoveMenuItem	.\tags	/^glutRemoveMenuItem	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutRemoveMenuItem( int item );$\/;"	p	signature:( int item )$/;"	p	file:	signature:( int item )
glutRemoveOverlay	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutRemoveOverlay( void );$/;"	p	signature:( void )
glutRemoveOverlay	.\tags	/^glutRemoveOverlay	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutRemoveOverlay( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutReportErrors	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutReportErrors( void );$/;"	p	signature:( void )
glutReportErrors	.\tags	/^glutReportErrors	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutReportErrors( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutReshapeFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutReshapeFunc( void (* callback)( int, int ) );$/;"	p	signature:( void (* callback)( int, int ) )
glutReshapeWindow	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutReshapeWindow( int width, int height );$/;"	p	signature:( int width, int height )
glutReshapeWindow	.\tags	/^glutReshapeWindow	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutReshapeWindow( int width, int height );$\/;"	p	signature:( int width, int height )$/;"	p	file:	signature:( int width, int height )
glutSetColor	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSetColor( int color, GLfloat red, GLfloat green, GLfloat blue );$/;"	p	signature:( int color, GLfloat red, GLfloat green, GLfloat blue )
glutSetCursor	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSetCursor( int cursor );$/;"	p	signature:( int cursor )
glutSetCursor	.\tags	/^glutSetCursor	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutSetCursor( int cursor );$\/;"	p	signature:( int cursor )$/;"	p	file:	signature:( int cursor )
glutSetIconTitle	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSetIconTitle( const char* title );$/;"	p	signature:( const char* title )
glutSetKeyRepeat	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSetKeyRepeat( int repeatMode );$/;"	p	signature:( int repeatMode )
glutSetMenu	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSetMenu( int menu );$/;"	p	signature:( int menu )
glutSetMenuData	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutSetMenuData(void* data);$/;"	p	signature:(void* data)
glutSetMenuData	.\tags	/^glutSetMenuData	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutSetMenuData(void* data);$\/;"	p	signature:(void* data)$/;"	p	file:	signature:(void* data)
glutSetOption	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutSetOption ( GLenum option_flag, int value );$/;"	p	signature:( GLenum option_flag, int value )
glutSetWindow	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSetWindow( int window );$/;"	p	signature:( int window )
glutSetWindow	.\tags	/^glutSetWindow	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutSetWindow( int window );$\/;"	p	signature:( int window )$/;"	p	file:	signature:( int window )
glutSetWindowData	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutSetWindowData(void* data);$/;"	p	signature:(void* data)
glutSetWindowData	.\tags	/^glutSetWindowData	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutSetWindowData(void* data);$\/;"	p	signature:(void* data)$/;"	p	file:	signature:(void* data)
glutSetWindowTitle	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSetWindowTitle( const char* title );$/;"	p	signature:( const char* title )
glutSetWindowTitle	.\tags	/^glutSetWindowTitle	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutSetWindowTitle( const char* title );$\/;"	p	signature:( const char* title )$/;"	p	file:	signature:( const char* title )
glutSetupVideoResizing	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSetupVideoResizing( void );$/;"	p	signature:( void )
glutShowOverlay	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutShowOverlay( void );$/;"	p	signature:( void )
glutShowOverlay	.\tags	/^glutShowOverlay	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutShowOverlay( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutShowWindow	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutShowWindow( void );$/;"	p	signature:( void )
glutShowWindow	.\tags	/^glutShowWindow	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutShowWindow( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutSolidCone	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSolidCone( GLdouble base, GLdouble height, GLint slices, GLint stacks );$/;"	p	signature:( GLdouble base, GLdouble height, GLint slices, GLint stacks )
glutSolidCube	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSolidCube( GLdouble size );$/;"	p	signature:( GLdouble size )
glutSolidCylinder	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutSolidCylinder( GLdouble radius, GLdouble height, GLint slices, GLint stacks);$/;"	p	signature:( GLdouble radius, GLdouble height, GLint slices, GLint stacks)
glutSolidCylinder	.\tags	/^glutSolidCylinder	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutSolidCylinder( GLdouble radius, GLdouble height, GLint slices, GLint stacks);$\/;"	p	signature:( GLdouble radius, GLdouble height, GLint slices, GLint stacks)$/;"	p	file:	signature:( GLdouble radius, GLdouble height, GLint slices, GLint stacks)
glutSolidDodecahedron	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSolidDodecahedron( void );$/;"	p	signature:( void )
glutSolidIcosahedron	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSolidIcosahedron( void );$/;"	p	signature:( void )
glutSolidOctahedron	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSolidOctahedron( void );$/;"	p	signature:( void )
glutSolidRhombicDodecahedron	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutSolidRhombicDodecahedron( void );$/;"	p	signature:( void )
glutSolidRhombicDodecahedron	.\tags	/^glutSolidRhombicDodecahedron	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutSolidRhombicDodecahedron( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutSolidSierpinskiSponge	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutSolidSierpinskiSponge ( int num_levels, GLdouble offset[3], GLdouble scale );$/;"	p	signature:( int num_levels, GLdouble offset[3], GLdouble scale )
glutSolidSierpinskiSponge	.\tags	/^glutSolidSierpinskiSponge	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutSolidSierpinskiSponge ( int num_levels, GLdouble offset[3], GLdouble scale );$\/;"	p	signature:( int num_levels, GLdouble offset[3], GLdouble scale )$/;"	p	file:	signature:( int num_levels, GLdouble offset[3], GLdouble scale )
glutSolidSphere	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSolidSphere( GLdouble radius, GLint slices, GLint stacks );$/;"	p	signature:( GLdouble radius, GLint slices, GLint stacks )
glutSolidTeapot	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSolidTeapot( GLdouble size );$/;"	p	signature:( GLdouble size )
glutSolidTetrahedron	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSolidTetrahedron( void );$/;"	p	signature:( void )
glutSolidTorus	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSolidTorus( GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings );$/;"	p	signature:( GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings )
glutSpaceballButtonFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSpaceballButtonFunc( void (* callback)( int, int ) );$/;"	p	signature:( void (* callback)( int, int ) )
glutSpaceballMotionFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSpaceballMotionFunc( void (* callback)( int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int ) )
glutSpaceballRotateFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSpaceballRotateFunc( void (* callback)( int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int ) )
glutSpaceballRotateFunc	.\tags	/^glutSpaceballRotateFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutSpaceballRotateFunc( void (* callback)( int, int, int ) );$\/;"	p	signature:( void (* callback)( int, int, int ) )$/;"	p	file:	signature:( void (* callback)( int, int, int ) )
glutSpecialFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSpecialFunc( void (* callback)( int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int ) )
glutSpecialFunc	.\tags	/^glutSpecialFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutSpecialFunc( void (* callback)( int, int, int ) );$\/;"	p	signature:( void (* callback)( int, int, int ) )$/;"	p	file:	signature:( void (* callback)( int, int, int ) )
glutSpecialUpFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSpecialUpFunc( void (* callback)( int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int ) )
glutStopVideoResizing	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutStopVideoResizing( void );$/;"	p	signature:( void )
glutStopVideoResizing	.\tags	/^glutStopVideoResizing	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutStopVideoResizing( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutStrokeCharacter	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutStrokeCharacter( void* font, int character );$/;"	p	signature:( void* font, int character )
glutStrokeCharacter	.\tags	/^glutStrokeCharacter	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutStrokeCharacter( void* font, int character );$\/;"	p	signature:( void* font, int character )$/;"	p	file:	signature:( void* font, int character )
glutStrokeHeight	.\GL\freeglut_ext.h	/^FGAPI GLfloat FGAPIENTRY glutStrokeHeight( void* font );$/;"	p	signature:( void* font )
glutStrokeHeight	.\tags	/^glutStrokeHeight	.\\GL\\freeglut_ext.h	\/^FGAPI GLfloat FGAPIENTRY glutStrokeHeight( void* font );$\/;"	p	signature:( void* font )$/;"	p	file:	signature:( void* font )
glutStrokeLength	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutStrokeLength( void* font, const unsigned char* string );$/;"	p	signature:( void* font, const unsigned char* string )
glutStrokeString	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutStrokeString( void* font, const unsigned char *string );$/;"	p	signature:( void* font, const unsigned char *string )
glutStrokeString	.\tags	/^glutStrokeString	.\\GL\\freeglut_ext.h	\/^FGAPI void    FGAPIENTRY glutStrokeString( void* font, const unsigned char *string );$\/;"	p	signature:( void* font, const unsigned char *string )$/;"	p	file:	signature:( void* font, const unsigned char *string )
glutStrokeWidth	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutStrokeWidth( void* font, int character );$/;"	p	signature:( void* font, int character )
glutSwapBuffers	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutSwapBuffers( void );$/;"	p	signature:( void )
glutSwapBuffers	.\tags	/^glutSwapBuffers	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutSwapBuffers( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutTabletButtonFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutTabletButtonFunc( void (* callback)( int, int, int, int ) );$/;"	p	signature:( void (* callback)( int, int, int, int ) )
glutTabletMotionFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutTabletMotionFunc( void (* callback)( int, int ) );$/;"	p	signature:( void (* callback)( int, int ) )
glutTabletMotionFunc	.\tags	/^glutTabletMotionFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutTabletMotionFunc( void (* callback)( int, int ) );$\/;"	p	signature:( void (* callback)( int, int ) )$/;"	p	file:	signature:( void (* callback)( int, int ) )
glutTimerFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutTimerFunc( unsigned int time, void (* callback)( int ), int value );$/;"	p	signature:( unsigned int time, void (* callback)( int ), int value )
glutUseLayer	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutUseLayer( GLenum layer );$/;"	p	signature:( GLenum layer )
glutVideoPan	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutVideoPan( int x, int y, int width, int height );$/;"	p	signature:( int x, int y, int width, int height )
glutVideoPan	.\tags	/^glutVideoPan	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutVideoPan( int x, int y, int width, int height );$\/;"	p	signature:( int x, int y, int width, int height )$/;"	p	file:	signature:( int x, int y, int width, int height )
glutVideoResize	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutVideoResize( int x, int y, int width, int height );$/;"	p	signature:( int x, int y, int width, int height )
glutVideoResizeGet	.\GL\freeglut_std.h	/^FGAPI int     FGAPIENTRY glutVideoResizeGet( GLenum query );$/;"	p	signature:( GLenum query )
glutVideoResizeGet	.\tags	/^glutVideoResizeGet	.\\GL\\freeglut_std.h	\/^FGAPI int     FGAPIENTRY glutVideoResizeGet( GLenum query );$\/;"	p	signature:( GLenum query )$/;"	p	file:	signature:( GLenum query )
glutVisibilityFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutVisibilityFunc( void (* callback)( int ) );$/;"	p	signature:( void (* callback)( int ) )
glutVisibilityFunc	.\tags	/^glutVisibilityFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutVisibilityFunc( void (* callback)( int ) );$\/;"	p	signature:( void (* callback)( int ) )$/;"	p	file:	signature:( void (* callback)( int ) )
glutWMCloseFunc	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutWMCloseFunc( void (* callback)( void ) );$/;"	p	signature:( void (* callback)( void ) )
glutWarpPointer	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWarpPointer( int x, int y );$/;"	p	signature:( int x, int y )
glutWindowStatusFunc	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWindowStatusFunc( void (* callback)( int ) );$/;"	p	signature:( void (* callback)( int ) )
glutWindowStatusFunc	.\tags	/^glutWindowStatusFunc	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutWindowStatusFunc( void (* callback)( int ) );$\/;"	p	signature:( void (* callback)( int ) )$/;"	p	file:	signature:( void (* callback)( int ) )
glutWireCone	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWireCone( GLdouble base, GLdouble height, GLint slices, GLint stacks );$/;"	p	signature:( GLdouble base, GLdouble height, GLint slices, GLint stacks )
glutWireCone	.\tags	/^glutWireCone	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutWireCone( GLdouble base, GLdouble height, GLint slices, GLint stacks );$\/;"	p	signature:( GLdouble base, GLdouble height, GLint slices, GLint stacks )$/;"	p	file:	signature:( GLdouble base, GLdouble height, GLint slices, GLint stacks )
glutWireCube	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWireCube( GLdouble size );$/;"	p	signature:( GLdouble size )
glutWireCube	.\tags	/^glutWireCube	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutWireCube( GLdouble size );$\/;"	p	signature:( GLdouble size )$/;"	p	file:	signature:( GLdouble size )
glutWireCylinder	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutWireCylinder( GLdouble radius, GLdouble height, GLint slices, GLint stacks);$/;"	p	signature:( GLdouble radius, GLdouble height, GLint slices, GLint stacks)
glutWireDodecahedron	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWireDodecahedron( void );$/;"	p	signature:( void )
glutWireDodecahedron	.\tags	/^glutWireDodecahedron	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutWireDodecahedron( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutWireIcosahedron	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWireIcosahedron( void );$/;"	p	signature:( void )
glutWireIcosahedron	.\tags	/^glutWireIcosahedron	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutWireIcosahedron( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutWireOctahedron	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWireOctahedron( void );$/;"	p	signature:( void )
glutWireOctahedron	.\tags	/^glutWireOctahedron	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutWireOctahedron( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutWireRhombicDodecahedron	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutWireRhombicDodecahedron( void );$/;"	p	signature:( void )
glutWireSierpinskiSponge	.\GL\freeglut_ext.h	/^FGAPI void    FGAPIENTRY glutWireSierpinskiSponge ( int num_levels, GLdouble offset[3], GLdouble scale );$/;"	p	signature:( int num_levels, GLdouble offset[3], GLdouble scale )
glutWireSphere	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWireSphere( GLdouble radius, GLint slices, GLint stacks );$/;"	p	signature:( GLdouble radius, GLint slices, GLint stacks )
glutWireSphere	.\tags	/^glutWireSphere	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutWireSphere( GLdouble radius, GLint slices, GLint stacks );$\/;"	p	signature:( GLdouble radius, GLint slices, GLint stacks )$/;"	p	file:	signature:( GLdouble radius, GLint slices, GLint stacks )
glutWireTeapot	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWireTeapot( GLdouble size );$/;"	p	signature:( GLdouble size )
glutWireTeapot	.\tags	/^glutWireTeapot	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutWireTeapot( GLdouble size );$\/;"	p	signature:( GLdouble size )$/;"	p	file:	signature:( GLdouble size )
glutWireTetrahedron	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWireTetrahedron( void );$/;"	p	signature:( void )
glutWireTetrahedron	.\tags	/^glutWireTetrahedron	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutWireTetrahedron( void );$\/;"	p	signature:( void )$/;"	p	file:	signature:( void )
glutWireTorus	.\GL\freeglut_std.h	/^FGAPI void    FGAPIENTRY glutWireTorus( GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings );$/;"	p	signature:( GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings )
glutWireTorus	.\tags	/^glutWireTorus	.\\GL\\freeglut_std.h	\/^FGAPI void    FGAPIENTRY glutWireTorus( GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings );$\/;"	p	signature:( GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings )$/;"	p	file:	signature:( GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings )
